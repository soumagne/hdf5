## Process this file with autoconf to produce configure.
##
## Copyright by The HDF Group.
## Copyright by the Board of Trustees of the University of Illinois.
## All rights reserved.
##
## This file is part of HDF5.  The full HDF5 copyright notice, including
## terms governing use, modification, and redistribution, is contained in
## the files COPYING and Copyright.html.  COPYING can be found at the root
## of the source code distribution tree; Copyright.html can be found at the
## root level of an installed copy of the electronic HDF5 document set and
## is linked from the top-level documents page.  It can also be found at
## http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have
## access to either file, you may request a copy from help@hdfgroup.org.

## ----------------------------------------------------------------------
## Initialize configure.
##
AC_REVISION($Id: configure.ac 22697 2012-08-19 14:35:47Z hdftest $)
AC_PREREQ([2.69])

## AC_INIT takes the name of the package, the version number, and an
## email address to report bugs. AC_CONFIG_SRCDIR takes a unique file
## as its argument.
##
## NOTE: Do not forget to change the version number here when we do a
## release!!!
##
AC_INIT([HDF5], [1.9.232], [help@hdfgroup.org])

AC_CONFIG_SRCDIR([src/H5.c])
AC_CONFIG_HEADERS([src/H5config.h])

AC_CONFIG_AUX_DIR([bin])
AC_CONFIG_MACRO_DIR([m4])

## AM_INIT_AUTOMAKE takes a list of options that should be applied to
## every Makefile.am when automake is run.
AM_INIT_AUTOMAKE([foreign])
AM_SILENT_RULES([yes])

## AM_MAINTAINER_MODE turns off "rebuild rules" that contain dependencies
## for Makefiles, configure, src/H5config.h, etc. If AM_MAINTAINER_MODE
## is enabled, these files will be rebuilt if out of date. This is a
## problem because if users try to build on a machine with
## the wrong versions of autoconf and automake, these files will be
## rebuilt with the wrong versions and bad things can happen.
## Also, CVS doesn't preserve dependencies between timestamps, so
## Makefiles will often think rebuilding needs to occur when it doesn't.
##
## By default, it is enabled. Users can configure with
## --disable-maintainer-mode to prevent running the autotools.
AM_MAINTAINER_MODE([enable])

## ----------------------------------------------------------------------
## Set prefix default (install directory) to a directory in the build area.
## This allows multiple src-dir builds within one host.
AC_PREFIX_DEFAULT([`pwd`/hdf5])

## Run post processing on files created by configure.
## src/H5pubconf.h:
## Generate src/H5pubconf.h from src/H5config.h by prepending H5_ to all
## macro names. This avoid name conflict between HDF5 macro names and those
## generated by another software package that uses the HDF5 library.
## src/libhdf5.settings:
## Remove all lines begun with "#" which are generated by CONDITIONAL's of
## configure.
AC_CONFIG_COMMANDS([pubconf], [
  echo "creating src/H5pubconf.h"
  sed 's/#define /#define H5_/' <src/H5config.h |\
    sed 's/#undef /#undef H5_/' >pubconf
  if test ! -f src/H5pubconf.h; then
    /bin/mv -f pubconf src/H5pubconf.h
  elif (diff pubconf src/H5pubconf.h >/dev/null); then
    rm -f pubconf
    echo "src/H5pubconf.h is unchanged"
  else
    /bin/mv -f pubconf src/H5pubconf.h
  fi
  echo "Post process src/libhdf5.settings"
  sed '/^#/d' < src/libhdf5.settings > libhdf5.settings.TMP
  cp libhdf5.settings.TMP src/libhdf5.settings
  rm -f libhdf5.settings.TMP
])

## It's possible to configure for a host other than the one on which
## configure is currently running by using the --host=foo flag.
## For machines on which HDF5 is often configured, it can be convenient
## to specify the name of the machine rather than its canonical type.
##
## There are currently no hosts, but if there were they would be
## listed by hostname and the alias would point to a file in
## the config directory:
##
##case $host_alias in
##  <some host>)
##    host_alias=<config file in config directory>
##    ;;
##esac

AC_CANONICAL_HOST
AC_SUBST([CPPFLAGS])

## H5_CFLAGS (and company) are for CFLAGS that should be used on HDF5, but
## not exported to h5cc (or h5fc, etc.)
AC_SUBST([H5_CFLAGS])
AC_SUBST([H5_CPPFLAGS])
AC_SUBST([H5_FCFLAGS])
AC_SUBST([H5_CXXFLAGS])
AC_SUBST([H5_LDFLAGS])

## AM_CFLAGS (and company) are for CFLAGS that should be used on HDF5,
## and WILL be exported to h5cc (or h5fc, etc) if set by configure.
AC_SUBST([AM_CFLAGS])
AC_SUBST([AM_FCFLAGS])
AC_SUBST([AM_CXXFLAGS])
AC_SUBST([AM_CPPFLAGS])
AC_SUBST([AM_LDFLAGS])

## Make sure flags are initialized.
AM_CFLAGS="${AM_CFLAGS}"
AM_CXXFLAGS="${AM_CXXFLAGS}"
AM_FCFLAGS="${AM_FCFLAGS}"
AM_CPPFLAGS="${AM_CPPFLAGS}"
AM_LDFLAGS="${AM_LDFLAGS}"
CFLAGS="${CFLAGS}"
CXXFLAGS="${CXXFLAGS}"
FCFLAGS="${FCFLAGS}"
CPPFLAGS="${CPPFLAGS}"
LDFLAGS="${LDFLAGS}"

## Configure may need to alter any of the *FLAGS variables in order for
## various checks to work correctly. Save the user's value here so it
## can be restored once all configure checks are complete.
saved_user_CFLAGS="$CFLAGS"
saved_user_CXXFLAGS="$CXXFLAGS"
saved_user_FCFLAGS="$FCFLAGS"
saved_user_LDFLAGS="$LDFLAGS"
saved_user_CPPFLAGS="$CPPFLAGS"

## Support F9X variable to define Fortran compiler if FC variable is
## not used.  This should be deprecated in the future.
if test "x" = "x$FC"; then
  FC=${F9X}
fi

## ----------------------------------------------------------------------
## Dump all shell variables values.
##
AC_MSG_CHECKING([shell variables initial values])
set >&AS_MESSAGE_LOG_FD
AC_MSG_RESULT([done])

## Define all symbol variables used for configure summary.
## EXTERNAL_FILTERS equals all external filters. Default none.
## MPE: whether MPE option is enabled. Default no.
## STATIC_EXEC: whether static-exec is enabled. Default no.
## HDF_FORTRAN: whether Fortran is enabled. Default no.
## FC: Fortran compiler.
## HDF_CXX: whether C++ is enabled. Default no.
## CXX: C++ compiler.
## HDF5_HL: whether high-level library is enabled. Default is yes.
## INSTRUMENT: whether INSTRUMENT is enabled. No default set here.
## CODESTACK: whether CODESTACK is enabled. Default no.
## HAVE_DMALLOC: whether system has dmalloc support. Default no.
## HAVE_FLOAT128: whether system has Quad-Precision Math Library. Default no.
## DIRECT_VFD: whether DIRECT_VFD is enabled. Default no.
## THREADSAFE: whether THREADSAFE is enabled. Default no.
## STATIC_SHARED: whether static and/or shared libraries are requested.
## enable_shared: whether shared lib is enabled.
## enable_static: whether static lib is enabled.
## UNAME_INFO: System information.

AC_SUBST([EXTERNAL_FILTERS])
AC_SUBST([MPE]) MPE=no
AC_SUBST([STATIC_EXEC]) STATIC_EXEC=no
AC_SUBST([HDF_FORTRAN]) HDF_FORTRAN=no
AC_SUBST([FC]) HDF_FORTRAN=no
AC_SUBST([HDF_CXX]) HDF_CXX=no
AC_SUBST([CXX]) HDF_CXX=no
AC_SUBST([HDF5_HL]) HDF5_HL=yes
AC_SUBST([PYTHON]) PYTHON=no
AC_SUBST([EFF]) EFF=no
AC_SUBST([IOD_CORRUPT_TOOL]) IOD_CORRUPT_TOOL=no
AC_SUBST([INDEXING]) INDEXING=no
AC_SUBST([INSTRUMENT])
AC_SUBST([CODESTACK]) CODESTACK=no
AC_SUBST([HAVE_DMALLOC]) HAVE_DMALLOC=no
AC_SUBST([DIRECT_VFD]) DIRECT_VFD=no
AC_SUBST([THREADSAFE]) THREADSAFE=no
AC_SUBST([STATIC_SHARED])
AC_SUBST([enable_shared])
AC_SUBST([enable_static])
AC_SUBST([UNAME_INFO]) UNAME_INFO=`uname -a`
AC_SUBST([PAC_C_MAX_REAL_PRECISION])
AC_SUBST([Fortran_COMPILER_ID])
Fortran_COMPILER_ID=none

## ----------------------------------------------------------------------
## Some platforms have broken basename, and/or xargs programs. Check
## that it actually does what it's supposed to do. Catch this early
## since configure and scripts relies upon them heavily and there's
## no use continuing if it's broken.
##
AC_MSG_CHECKING([if basename works])
BASENAME_TEST="`basename /foo/bar/baz/qux/basename_works`"
if test $BASENAME_TEST != "basename_works"; then
  AC_MSG_ERROR([basename program doesn't work])
else
  AC_MSG_RESULT([yes])
fi

## xargs basename used in configure to get the CC_BASENAME value
AC_MSG_CHECKING([if xargs works])
XARGS_TEST="`echo /foo/bar/baz/qux/xargs_works | xargs basename`"
if test $XARGS_TEST != "xargs_works"; then
  AC_MSG_ERROR([xargs program doesn't work])
else
  AC_MSG_RESULT([yes])
fi

## ----------------------------------------------------------------------
## Check that the cache file was build on the same host as what we're
## running on now.
##
AC_CACHE_CHECK([for cached host], [hdf5_cv_host], [hdf5_cv_host="none"]);
if test $hdf5_cv_host = "none"; then
  hdf5_cv_host=$host
elif test $hdf5_cv_host != $host; then
  echo "The config.cache file was generated on $hdf5_cv_host but"
  echo "this is $host.  Please remove that file and try again."
  AC_MSG_ERROR([config.cache file is invalid])
fi

## ----------------------------------------------------------------------
## Source any special files that we need.  These files normally aren't
## present but can be used by the maintainers to fine tune things like
## turning on debug or profiling flags for the compiler.  The search order
## is:
##
##	CPU-VENDOR-OS
##	VENDOR-OS
##	CPU-OS
##	CPU-VENDOR
##	OS
##	VENDOR
##	CPU
##
## If the `OS' ends with a version number then remove it. For instance,
## `freebsd3.1' would become `freebsd'

case $host_os in
  aix*)
    host_os_novers=aix
    ;;
  freebsd*)
    host_os_novers=freebsd
    ;;
  solaris*)
    host_os_novers=solaris
    ;;
  *)
    host_os_novers=$host_os
    ;;
esac

host_config="none"
for f in $host_cpu-$host_vendor-$host_os \
         $host_cpu-$host_vendor-$host_os_novers \
         $host_vendor-$host_os \
         $host_vendor-$host_os_novers \
         $host_cpu-$host_os \
         $host_cpu-$host_os_novers \
         $host_cpu-$host_vendor \
         $host_os \
         $host_os_novers \
         $host_vendor \
         $host_cpu ; do
  AC_MSG_CHECKING([for config $f])
  if test -f "$srcdir/config/$f"; then
    host_config=$srcdir/config/$f
    AC_MSG_RESULT([found])
    break
  fi
  AC_MSG_RESULT([no])
done
if test "X$host_config" != "Xnone"; then
  CC_BASENAME="`echo $CC | cut -f1 -d' ' | xargs basename 2>/dev/null`"
  . $host_config
fi

## Source any special site-specific file
hname="`hostname`"
while test -n "$hname"; do
  file=$srcdir/config/site-specific/host-$hname
  AC_MSG_CHECKING([for config $file])
  if test -f "$file"; then
    . $file
    AC_MSG_RESULT([found])
    break
  fi
  AC_MSG_RESULT([no])
  hname_tmp=$hname
  hname="`echo $hname | cut -d. -f2-99`"
  test "$hname_tmp" = "$hname" && break
done

## ----------------------------------------------------------------------
## Some built-in configure checks can only see CFLAGS (not AM_CFLAGS), so
## we need to add this in so configure works as intended. We will need to
## reset this value at the end of configure, to preserve the user's settings.
CFLAGS="${AM_CFLAGS} ${CFLAGS}"
FCFLAGS="${AM_FCFLAGS} ${FCFLAGS}"
CXXFLAGS="${AM_CXXFLAGS} ${CXXFLAGS}"
CPPFLAGS="${AM_CPPFLAGS} ${CPPFLAGS}"
LDFLAGS="${AM_LDFLAGS} ${LDFLAGS}"

## ----------------------------------------------------------------------
## Enable dependency tracking unless the configure options or a
## site-specific file told us not to.  This prevents configure from
## silently disabling dependencies for some compilers.
##
if test -z "${enable_dependency_tracking}"; then
  enable_dependency_tracking="yes"
fi

## ----------------------------------------------------------------------
## Check for programs.
##
AC_PROG_CC
CC_BASENAME="`echo $CC | cut -f1 -d' ' | xargs basename 2>/dev/null`"

## ----------------------------------------------------------------------------
## Configure disallows unsupported combinations of options. However, users
## may want to override and build with unsupported combinations for their
## own use. They can use the --enable-unsupported configure flag, which
## ignores any errors from configure due to incompatible flags.
AC_MSG_CHECKING([if unsupported combinations of configure options are allowed])
AC_ARG_ENABLE([unsupported],
              [AS_HELP_STRING([--enable-unsupported],
                              [Allow unsupported combinations of configure options])],
              [ALLOW_UNSUPPORTED=$enableval])

case "X-$ALLOW_UNSUPPORTED" in
  X-|X-no)
    AC_MSG_RESULT([no])
    ;;
  X-yes)
    AC_MSG_RESULT([yes])
    ;;
  *)
    ;;
esac

## ----------------------------------------------------------------------
## Data types and their sizes.
##
AC_TYPE_OFF_T
AC_CHECK_TYPE([size_t], [],
        [AC_DEFINE_UNQUOTED([size_t], [unsigned long],
                [Define to `unsigned long' if <sys/types.h> does not define.])])
AC_CHECK_TYPE([ssize_t], [],
        [AC_DEFINE_UNQUOTED([ssize_t], [long],
                [Define to `long' if <sys/types.h> does not define.])])
AC_CHECK_TYPE([ptrdiff_t], [],
        [AC_DEFINE_UNQUOTED([ptrdiff_t], [long],
                [Define to `long' if <sys/types.h> does not define.])])
AC_C_BIGENDIAN
AC_CHECK_SIZEOF([char], [1])
AC_CHECK_SIZEOF([short], [2])
AC_CHECK_SIZEOF([int], [4])
AC_CHECK_SIZEOF([unsigned], [4])
AC_CHECK_SIZEOF([long], [4])
AC_CHECK_SIZEOF([long long], [8])
AC_CHECK_SIZEOF([__int64], [8])
AC_CHECK_SIZEOF([float], [4])
AC_CHECK_SIZEOF([double], [8])
AC_CHECK_SIZEOF([long double], [8])

## Check for non-standard extenstion __FLOAT128
HAVE_FLOAT128=0
HAVE_QUADMATH=0
FLT128_DIG=0
LDBL_DIG=0

AC_CHECK_SIZEOF([__float128])
AC_CHECK_SIZEOF([_Quad])
AC_CHECK_HEADERS([quadmath.h], [HAVE_QUADMATH=1], [])
PAC_FC_LDBL_DIG

if test "$ac_cv_sizeof___float128" != 0 && test "$FLT128_DIG" != 0 ; then
  AC_DEFINE([HAVE_FLOAT128], [1], [Determine if __float128 is available])
  PAC_C_MAX_REAL_PRECISION=$FLT128_DIG
else
  PAC_C_MAX_REAL_PRECISION=$LDBL_DIG
fi
AC_DEFINE_UNQUOTED([PAC_C_MAX_REAL_PRECISION], $PAC_C_MAX_REAL_PRECISION, [Determine the maximum decimal precision in C])
AC_MSG_RESULT([$PAC_C_MAX_REAL_PRECISION])
## ----------------------------------------------------------------------
## Check if they would like the Fortran interface compiled
##
AC_SUBST([HDF5_INTERFACES]) HDF5_INTERFACES=""
AC_MSG_CHECKING([if Fortran interface enabled])
AC_ARG_ENABLE([fortran],
              [AS_HELP_STRING([--enable-fortran],
                              [Compile the Fortran interface [default=no]])],
              [HDF_FORTRAN=$enableval])

if test "X$HDF_FORTRAN" = "Xyes"; then
  echo "yes"
else
  echo "no"
fi

if test "X$HDF_FORTRAN" = "Xyes"; then

## We will output an include file for Fortran, H5config_f.inc which 
## contains various configure definitions used by the Fortran Library. 
## Prepend H5_ to all macro names. This avoids name conflict between HDF5 macro 
## names and those generated by another software package that uses the HDF5 library.
  AC_CONFIG_HEADERS([fortran/src/H5config_f.inc], 
    [cat fortran/src/H5config_f.inc | sed '1d;s%^/\* \(.*\) \*/%\1%;s/#define /#define H5_/;s/#undef /#undef H5_/' >fortran/src/H5config_f.inc.tmp; mv -f fortran/src/H5config_f.inc.tmp fortran/src/H5config_f.inc])

  AC_SUBST([FC]) HDF_FORTRAN=yes

  HDF5_INTERFACES="$HDF5_INTERFACES fortran"

  ## --------------------------------------------------------------------
  ## HDF5 integer variables for the H5fortran_types.f90 file.
  ##
  AC_SUBST([R_LARGE])
  AC_SUBST([R_INTEGER])
  AC_SUBST([HADDR_T])
  AC_SUBST([HSIZE_T])
  AC_SUBST([HSSIZE_T])
  AC_SUBST([HID_T])
  AC_SUBST([SIZE_T])
  AC_SUBST([OBJECT_NAMELEN_DEFAULT_F])

  ## --------------------------------------------------------------------
  ## Fortran source extention
  ##
  AC_FC_SRCEXT([f90])

  AC_SUBST([F9XSUFFIXFLAG])
  AC_SUBST([FSEARCH_DIRS])

  ## --------------------------------------------------------------------
  ## Check for a Fortran compiler and how to include modules.
  ##
  AC_PROG_FC([PAC_FC_SEARCH_LIST],)
  AC_F9X_MODS

  ## Change to the Fortran 90 language
  AC_LANG_PUSH(Fortran)

  ## Checking if the compiler supports the required Fortran 2003 features and
  ## stopping if it does not.
  PAC_PROG_FC_HAVE_F2003_REQUIREMENTS
 
  if test "X$HAVE_F2003_REQUIREMENTS" = "Xno"; then
    AC_MSG_ERROR([Fortran compiler lacks required Fortran 2003 features; unsupported Fortran 2003 compiler, remove --enable-fortran])
  fi

  ## --------------------------------------------------------------------
  ## Define wrappers for the C compiler to use Fortran function names
  ##
  AC_FC_WRAPPERS

  ## --------------------------------------------------------------------
  ## See if the fortran compiler supports the intrinsic function "SIZEOF"
  PAC_PROG_FC_SIZEOF

  ## See if the fortran compiler supports the intrinsic function "C_SIZEOF"
  PAC_PROG_FC_C_SIZEOF
	
  ## See if the fortran compiler supports the intrinsic function "STORAGE_SIZE"
  PAC_PROG_FC_STORAGE_SIZE

  ## Set the sizeof function for use later in the fortran tests
  if test "X$HAVE_STORAGE_SIZE_FORTRAN" = "Xyes";then
    FC_SIZEOF_A="STORAGE_SIZE(a, c_size_t)/STORAGE_SIZE(c_char_'a',c_size_t)"
    FC_SIZEOF_B="STORAGE_SIZE(b, c_size_t)/STORAGE_SIZE(c_char_'a',c_size_t)"
    FC_SIZEOF_C="STORAGE_SIZE(c, c_size_t)/STORAGE_SIZE(c_char_'a',c_size_t)"
  else 
    if test "X$HAVE_SIZEOF_FORTRAN" = "Xyes";then
      FC_SIZEOF_A="SIZEOF(a)"
      FC_SIZEOF_B="SIZEOF(b)"
      FC_SIZEOF_C="SIZEOF(c)"
    else	
      ## If neither intrinsic functions SIZEOF or STORAGE_SIZE is available then stop configure with an error
      AC_MSG_ERROR([Fortran compiler requires either intrinsic functions SIZEOF or STORAGE_SIZE])
    fi
  fi

  ## See if the fortran compiler supports the intrinsic module "ISO_FORTRAN_ENV"
  PAC_PROG_FC_ISO_FORTRAN_ENV
  ## Check KIND and size of native integer
  PAC_FC_NATIVE_INTEGER
 
  ## Find all available KINDs
  PAC_FC_AVAIL_KINDS
  ## Find all sizeofs for available KINDs
  PAC_FC_SIZEOF_INT_KINDS
  PAC_FC_SIZEOF_REAL_KINDS

  AC_SUBST([PAC_FC_ALL_REAL_KINDS])
  AC_SUBST([PAC_FC_MAX_REAL_PRECISION])
  AC_SUBST([PAC_FC_ALL_INTEGER_KINDS])
  AC_SUBST([PAC_FC_ALL_REAL_KINDS_SIZEOF])
  AC_SUBST([PAC_FC_ALL_INTEGER_KINDS_SIZEOF])  
  AC_SUBST([PAC_FORTRAN_NATIVE_INTEGER_KIND])
  AC_SUBST([PAC_FORTRAN_NATIVE_INTEGER_SIZEOF])
  AC_SUBST([PAC_FORTRAN_NATIVE_REAL_KIND])
  AC_SUBST([PAC_FORTRAN_NATIVE_REAL_SIZEOF])
  AC_SUBST([PAC_FORTRAN_NATIVE_DOUBLE_KIND])
  AC_SUBST([PAC_FORTRAN_NATIVE_DOUBLE_SIZEOF])
  AC_SUBST([HAVE_Fortran_INTEGER_SIZEOF_16])
  AC_SUBST([FORTRAN_HAVE_C_LONG_DOUBLE])
  AC_SUBST([FORTRAN_C_LONG_DOUBLE_IS_UNIQUE])
  AC_SUBST([FORTRAN_SIZEOF_LONG_DOUBLE])
  AC_SUBST([H5CONFIG_F_NUM_RKIND])
  AC_SUBST([H5CONFIG_F_RKIND])	
  AC_SUBST([H5CONFIG_F_RKIND_SIZEOF])	
  AC_SUBST([H5CONFIG_F_NUM_IKIND])
  AC_SUBST([H5CONFIG_F_IKIND])
  AC_DEFINE_UNQUOTED([Fortran_COMPILER_ID], $Fortran_COMPILER_ID, [Define Fortran compiler ID])

  ## Setting definition if there is a 16 byte fortran integer
  if `echo $PAC_FC_ALL_INTEGER_KINDS_SIZEOF | grep '16' >/dev/null`; then
    HAVE_Fortran_INTEGER_SIZEOF_16="1" 	
    AC_DEFINE([HAVE_Fortran_INTEGER_SIZEOF_16], [1], [Determine if INTEGER*16 is available])
  else
    HAVE_Fortran_INTEGER_SIZEOF_16="0"
    AC_DEFINE([HAVE_Fortran_INTEGER_SIZEOF_16], [0], [Determine if INTEGER*16 is available])
  fi

  if test "X$HAVE_STORAGE_SIZE_FORTRAN" = "Xyes"; then
    AC_DEFINE([FORTRAN_HAVE_STORAGE_SIZE], [1], [Define if we have Fortran intrinsic STORAGE_SIZE])
  fi

  if  test "X$HAVE_C_SIZEOF_FORTRAN" = "Xyes"; then
    AC_DEFINE([FORTRAN_HAVE_C_SIZEOF], [1], [Define if we have Fortran intrinsic C_SIZEOF])
  fi
	
  if  test "X$HAVE_SIZEOF_FORTRAN" = "Xyes"; then
    AC_DEFINE([FORTRAN_HAVE_SIZEOF], [1], [Define if we have Fortran intrinsic SIZEOF])
  fi

  ## See if C_LONG_DOUBLE is available
  PAC_PROG_FC_HAVE_C_LONG_DOUBLE

  FORTRAN_HAVE_C_LONG_DOUBLE="0" 
  if test "X$HAVE_C_LONG_DOUBLE_FORTRAN" = "Xyes"; then
    FORTRAN_HAVE_C_LONG_DOUBLE="1" 
    AC_DEFINE([FORTRAN_HAVE_C_LONG_DOUBLE], [1], [Define if we have Fortran C_LONG_DOUBLE])
  fi

  ## Is C_LONG_DOUBLE different from C_DOUBLE
  FORTRAN_C_LONG_DOUBLE_IS_UNIQUE="0"
  if test "X$FORTRAN_HAVE_C_LONG_DOUBLE"; then
    PAC_PROG_FC_C_LONG_DOUBLE_EQ_C_DOUBLE
    if test "X$C_LONG_DOUBLE_IS_UNIQUE_FORTRAN" = "Xyes"; then
      FORTRAN_C_LONG_DOUBLE_IS_UNIQUE="1"
      AC_DEFINE([FORTRAN_C_LONG_DOUBLE_IS_UNIQUE], [1], [Define if Fortran C_LONG_DOUBLE is different from C_DOUBLE])
    else
      FORTRAN_C_LONG_DOUBLE_IS_UNIQUE="0"
    fi
  fi
  
  FORTRAN_SIZEOF_LONG_DOUBLE=${ac_cv_sizeof_long_double}
  AC_DEFINE_UNQUOTED([FORTRAN_SIZEOF_LONG_DOUBLE], ["${ac_cv_sizeof_long_double}"], [Determine the size of C long double])


  dnl get the largest sizeof for REAL kinds
  max_real_fortran_sizeof="`echo $PAC_FC_ALL_REAL_KINDS_SIZEOF | sed -ne 's/.*,\([[0-9]]*\)\}/\1/p'`"
  max_real_fortran_kind="`echo \"[$]PAC_FC_ALL_REAL_KINDS\" | sed -ne 's/.*,\([[0-9]]*\)\}/\1/p'`"

  dnl remove the invalid kind from the list
  if test "$ac_cv_sizeof___float128" != 0;then
    if test "$ac_cv_sizeof___float128" != "$max_real_fortran_sizeof" && 
       test "${ac_cv_sizeof_long_double}" != "$max_real_fortran_sizeof" &&
       dnl account for the fact that the C compiler can have 16-byte __float128 and the Fortran compiler only has 8-byte doubles,
       dnl so we don't want to remove the 8-byte Fortran doubles. This is sometimes the case if different C and Fortran vendors
       dnl are used (for example gnu and pgi).
       test "${ac_cv_sizeof_double}" != "$max_real_fortran_sizeof" ; then
          AC_MSG_WARN([
           Fortran REAL(KIND=$max_real_fortran_kind) is $max_real_fortran_sizeof Bytes, but no corresponding C float type exists of that size
                     !!! Fortran interfaces will not be generated for REAL(KIND=$max_real_fortran_kind) !!!
          ])
      PAC_FC_ALL_REAL_KINDS="`echo $PAC_FC_ALL_REAL_KINDS | sed -e 's/,[[0-9]]\+}/}/g'`"
      PAC_FC_ALL_REAL_KINDS_SIZEOF="`echo $PAC_FC_ALL_REAL_KINDS_SIZEOF | sed -e 's/,[[0-9]]\+}/}/g'`"
    fi
  fi
  AC_MSG_CHECKING([for Fortran interoperable KINDS with C])
  AC_MSG_RESULT([$PAC_FC_ALL_REAL_KINDS])	

  dnl count the number of real kinds
  H5CONFIG_F_NUM_RKIND="INTEGER, PARAMETER :: num_rkinds = `echo \"[$]PAC_FC_ALL_REAL_KINDS\" |  tr -d -c ',\n' | awk '{ print length + 1; }'`"
  H5CONFIG_F_RKIND="INTEGER, DIMENSION(1:num_rkinds) :: rkind = (/`echo $PAC_FC_ALL_REAL_KINDS | sed -e 's/{//g' | sed -e 's/}//g' | sed -e 's/ /,/g'`/)"
  H5CONFIG_F_RKIND_SIZEOF="INTEGER, DIMENSION(1:num_rkinds) :: rkind_sizeof = (/`echo $PAC_FC_ALL_REAL_KINDS_SIZEOF | sed -e 's/{//g' | sed -e 's/}//g'| sed -e 's/ /,/g'`/)"

  AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_RKIND], $H5CONFIG_F_NUM_RKIND, [Define number of valid Fortran REAL KINDs])
  AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND], $H5CONFIG_F_RKIND, [Define valid Fortran REAL KINDs])
  AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND_SIZEOF], $H5CONFIG_F_RKIND_SIZEOF, [Define valid Fortran REAL KINDs Sizeof])

## Change back to the C language
  AC_LANG_POP(Fortran)
else
  FC="no"
fi

## ----------------------------------------------------------------------
## Check if they would like the C++ interface compiled
##
## We need to check for a C++ compiler unconditionally, since
## AC_PROG_CXX defines some macros that Automake 1.9.x uses and will
## miss even if c++ is not enabled.
  AC_PROG_CXX
  AC_PROG_CXXCPP	## this is checked for when AC_HEADER_STDC is done

AC_MSG_CHECKING([if c++ interface enabled])

AC_ARG_ENABLE([cxx],
              [AS_HELP_STRING([--enable-cxx],
                              [Compile the C++ interface [default=no]])],
              [HDF_CXX=$enableval])

if test "X$HDF_CXX" = "Xyes"; then
  echo "yes"
  HDF5_INTERFACES="$HDF5_INTERFACES c++"

  ## Change to the C++ language
  AC_LANG_PUSH(C++)

  # Checking if C++ needs old style header files in includes
  PAC_PROG_CXX_HEADERS

  # Checking if C++ can handle namespaces
  PAC_PROG_CXX_NAMESPACE

  # Checking if C++ has offsetof extension
  PAC_PROG_CXX_OFFSETOF

  # if C++ can handle static cast
  PAC_PROG_CXX_STATIC_CAST

else
  AC_MSG_RESULT([no])
  CXX="no"
fi

## Change back to the C language
AC_LANG_POP(C++)


## ----------------------------------------------------------------------
## Check if they would like the High Level library  compiled
##

AC_SUBST(HL) HL=""
## name of fortran folder inside "hl", if FORTRAN compile is requested
AC_SUBST(HL_FOR) HL_FOR=""
AC_MSG_CHECKING([if high level library is enabled])
AC_ARG_ENABLE([hl],
     [AS_HELP_STRING([--enable-hl],
                     [Enable the high level library [default=yes]])],
     [HDF5_HL=$enableval],
     [HDF5_HL=yes])

if test "X$HDF5_HL" = "Xyes"; then
 echo "yes"
 HL="hl"
 AC_DEFINE([INCLUDE_HL], [1],
           [Define if HDF5's high-level library headers should be included in hdf5.h])
else
 echo "no"
fi


## ----------------------------------------------------------------------
## Check which archiving tool to use. This needs to be done before
## the AM_PROG_LIBTOOL macro.
##

if test -z "$AR"; then
  AC_CHECK_PROGS([AR], [ar xar], [:], [$PATH])
fi
AC_SUBST([AR])

## Export the AR macro so that it will be placed in the libtool file
## correctly.
export AR

AC_PROG_MAKE_SET
AC_PROG_INSTALL


## ----------------------------------------------------------------------
## Set up ${TR} which is used to process DEBUG_PKG.

AC_PATH_PROG([TR], [tr])


## ----------------------------------------------------------------------
## Check that time can be used with srcdir.  This is okay on most systems,
## but seems to cause problems on Cygwin.
## The solution on Cygwin is not to record execution time for tests.
##
## Note: This is still true as of Cygwin 1.7.32 (Aug 2014) on both 32-
## and 64-bit platforms. Given how long this has been true, it seems
## unlikely to change, but we should probably re-test this periodically.

AC_MSG_CHECKING([if srcdir= and time commands work together])

AC_SUBST([TIME])
TIME=time
TIME_TEST=`foo="bar" ${TIME} echo 'baz' 2> /dev/null | grep baz`

if test "X${TIME_TEST}" = "Xbaz"; then
  AC_MSG_RESULT([yes])
else
  AC_MSG_RESULT([no])
  TIME=
fi


## The following variables are used to distinguish between building a
## serial and parallel library.
##
##    HAVE_PARALLEL	-- defined in H5config.h if we are building
##			   a parallel library even if configure wasn't
##			   able to find some header file or library that
##			   might be required. This is defined if the
##			   user explicitly states
##			   that a parallel library is being built by supplying
##			   the `--enable-parallel' configure switch.
##
##    PARALLEL		-- This variable is set to a non-null value if
##			   we're building a parallel version of the library.
##
##    RUNSERIAL	        -- This is a command which will be prepended to
##			   the executable name to run the executable using
##			   a single process. For serial versions of the
##			   library this will normally be empty. For parallel
##			   versions it might be something like `mpiexec -n 1'.
##			   The value of this variable is substituted in *.in
##			   files.
##
##    RUNPARALLEL	-- This is a command which will be prepended to
##			   the executable name to run the executable on
##			   multiple processors. For the serial library the
##			   value will normally be the empty string. For
##			   parallel library it should be something like
##			   "mpiexec -n \$\${NPROCS:=6}" where NPROCS will
##			   eventually contain the number of processors on which
##			   to run the executable (the double dollarsigns are to
##			   protect the expansion until make executes the
##			   command).  The value of this variable is
##			   substituted in *.in files.
##
AC_SUBST([PARALLEL])
AC_SUBST([RUNSERIAL])
AC_SUBST([RUNPARALLEL])
AC_SUBST([TESTPARALLEL])

## ----------------------------------------------------------------------
## Disable shared libraries on CYGWIN. (LK - 04/16/15)
## A number of tests run by "make check" fail on CYGWIN, so for HDF5 v1.8.15
## we will change the default for shared libraries to disabled.


case "`uname`" in
  CYGWIN*)
    enable_shared="no"
    CHECK_WARN="Shared libraries are not currently supported on CYGWIN."
    ;;
esac

## ----------------------------------------------------------------------
## Fortran libraries are not currently supported on Mac. Disable them.
## (this is overridable with --enable-unsupported).
##
AC_SUBST([H5_FORTRAN_SHARED])
H5_FORTRAN_SHARED="no"
if test "X${HDF_FORTRAN}" = "Xyes" && test "X${enable_shared}" != "Xno"; then
  AC_MSG_CHECKING([if shared Fortran libraries are supported])
  H5_FORTRAN_SHARED="yes"

  ## Disable fortran shared libraries on Mac. (MAM - 03/30/11)

  case "`uname`" in
    Darwin*)
    H5_FORTRAN_SHARED="no"
    CHECK_WARN="Shared Fortran libraries not currently supported on Mac."
      ;;
  esac

  ## Report results of check(s)

  if test "X${H5_FORTRAN_SHARED}" = "Xno"; then
    AC_MSG_RESULT([no])
    AC_MSG_WARN([$CHECK_WARN])
    if test "X${ALLOW_UNSUPPORTED}" != "Xyes"; then
      AC_MSG_WARN([Disabling shared Fortran libraries.])
      AC_MSG_WARN([To override this behavior, please use --enable-unsupported configure option.])
        if test "X${enable_static}" = "Xno"; then
          AC_MSG_ERROR([both static and shared Fortran libraries are disabled])
        fi
    else
      AC_MSG_WARN([Allowing unsupported Fortran shared libraries due to use of --enable-unsupported flag])
      H5_FORTRAN_SHARED="yes"
    fi
  else
    AC_MSG_RESULT([yes])
  fi
fi

AM_CONDITIONAL([FORTRAN_SHARED_CONDITIONAL], [test "X$H5_FORTRAN_SHARED" = "Xyes"])

## ----------------------------------------------------------------------
## Create libtool.  If shared/static libraries are going to be enabled
## or disabled, it should happen before these macros.
LT_PREREQ([2.2])

## ----------------------------------------------------------------------
## dlopen - This will use an improved version of libtool
## win32-dll - This will build clean dlls on win32 platforms.
LT_INIT([dlopen,win32-dll])

## ----------------------------------------------------------------------
## Check if we should install only statically linked executables.
##   This check needs to occur after libtool is initialized because
##   we check a libtool cache value and may issue a warning based
##   on its result.
AC_MSG_CHECKING([if we should install only statically linked executables])
AC_ARG_ENABLE([static_exec],
              [AS_HELP_STRING([--enable-static-exec],
                              [Install only statically linked executables
                               [default=no]])],
              [STATIC_EXEC=$enableval])

if test "X$STATIC_EXEC" = "Xyes"; then
  echo "yes"
  ## Issue a warning if -static flag is not supported.
  if test "X$lt_cv_prog_compiler_static_works" = "Xno"; then
      echo "    warning: -static flag not supported on this system; executable won't statically link shared system libraries."
      LT_STATIC_EXEC=""
  else
    LT_STATIC_EXEC="-all-static"
  fi
else
  echo "no"
  LT_STATIC_EXEC=""
fi
AM_CONDITIONAL([USE_PLUGINS_CONDITIONAL], [test "X$LT_STATIC_EXEC" = X])

AC_SUBST([LT_STATIC_EXEC])

## Fix up the INSTALL macro if it's a relative path. We want the
## full-path to the binary instead.
case "$INSTALL" in
  *install-sh*)
    INSTALL='\${top_srcdir}/bin/install-sh -c'
    ;;
esac

## ----------------------------------------------------------------------
## Some users have reported problems with libtool's use of '-Wl,-rpath' to
## link shared libraries in nondefault directories. Allow users to
## disable embedding the rpath information in the executables and to
## instead solely rely on the information in LD_LIBRARY_PATH.
AC_MSG_CHECKING([if -Wl,-rpath should be used to link shared libs in nondefault directories])
AC_ARG_ENABLE([sharedlib-rpath],
              [AS_HELP_STRING([--disable-sharedlib-rpath],
               [Disable use of the '=Wl,-rpath' linker option])],
              [RPATH=$enableval])

case "X-$RPATH" in
  X-no)
    AC_MSG_RESULT([no])
    runpath_var=
    hardcode_libdir_flag_spec=
    hardcode_libdir_flag_spec_ld=
    hardcode_into_libs=no
    ;;
  X-|X-yes)
    AC_MSG_RESULT([yes])
    ;;
  *)
    AC_MSG_RESULT([error])
    AC_MSG_ERROR([\'$enableval\' is not a valid rpath type])
    ;;
esac

## ----------------------------------------------------------------------
## Production flags?  Save the value in $CONFIG_MODE so we have it for
## the record.
##
AC_MSG_CHECKING([for production mode])
AC_ARG_ENABLE([production],
              [AS_HELP_STRING([--enable-production],
                              [Determines how to run the compiler.])])

case "X-$enable_production" in
  X-yes)
    enable_production="yes"
    AC_MSG_RESULT([production])
    CONFIG_MODE=production
    H5_CFLAGS="$H5_CFLAGS $PROD_CFLAGS"
    H5_CPPFLAGS="$H5_CPPFLAGS $PROD_CPPFLAGS"
    H5_CXXFLAGS="$H5_CXXFLAGS $PROD_CXXFLAGS"
    H5_FCFLAGS="$H5_FCFLAGS $PROD_FCFLAGS"
    ;;
  X-|X-no)
    enable_production="no"
    AC_MSG_RESULT([development])
    CONFIG_MODE=development
    H5_CFLAGS="$H5_CFLAGS $DEBUG_CFLAGS"
    H5_CPPFLAGS="$H5_CPPFLAGS $DEBUG_CPPFLAGS"
    H5_CXXFLAGS="$H5_CXXFLAGS $DEBUG_CXXFLAGS"
    H5_FCFLAGS="$H5_FCFLAGS $DEBUG_FCFLAGS"
    ;;
  X-pg|X-profile)
    enable_production="profile"
    AC_MSG_RESULT([profile])
    CONFIG_MODE=profile
    H5_CFLAGS="$H5_CFLAGS $PROFILE_CFLAGS"
    H5_CPPFLAGS="$H5_CPPFLAGS $PROFILE_CPPFLAGS"
    H5_CXXFLAGS="$H5_CXXFLAGS $PROFILE_CXXFLAGS"
    H5_FCFLAGS="$H5_FCFLAGS $PROFILE_FCFLAGS"
    ;;
  *)
    enable_production="user-defined"
    AC_MSG_RESULT([user-defined])
    CONFIG_MODE="$enableval"
    ;;
esac

## ----------------------------------------------------------------------
## Check for system libraries. "dl" stands for dynamically loaded library
##
AC_CHECK_LIB([m], [ceil])
AC_CHECK_LIB([dl], [dlopen])

## ----------------------------------------------------------------------
## Check for system header files.
##
AC_HEADER_STDC
AC_HEADER_TIME

## Unix
AC_CHECK_HEADERS([sys/resource.h sys/time.h unistd.h sys/ioctl.h sys/stat.h])
AC_CHECK_HEADERS([sys/socket.h sys/types.h])
AC_CHECK_HEADERS([stddef.h setjmp.h features.h])
AC_CHECK_HEADERS([dirent.h])
AC_CHECK_HEADERS([stdint.h], [C9x=yes])
AC_CHECK_HEADERS([stdbool.h])

## Darwin
AC_CHECK_HEADERS([mach/mach_time.h])
## Also need to detect Darwin for pubconf
case $host_os in
  darwin*)
    AC_DEFINE([HAVE_DARWIN], [1], [Define if Darwin or Mac OS X])
  ;;
esac

## Windows
case "`uname`" in
  CYGWIN*)
    AC_CHECK_HEADERS([io.h sys/timeb.h])
    ;;
  MINGW*)
    AC_CHECK_HEADERS([io.h winsock2.h sys/timeb.h])
    AC_HAVE_LIBRARY([ws2_32])
    ;;
  *)
    AC_CHECK_HEADERS([io.h winsock2.h sys/timeb.h])
    ;;
esac

## ----------------------------------------------------------------------
## Some platforms require that all symbols are resolved when a library
## is linked. We can use the -no-undefined flag to tell libtool that
## it will be able to build shared libraries on these architectures,
## as it will not do so by default.
##
if test "X${enable_shared}" = "Xyes"; then
  AC_MSG_CHECKING([if libtool needs -no-undefined flag to build shared libraries])
  case "`uname`" in
    CYGWIN*|MINGW*|AIX*)
      ## Add in the -no-undefined flag to LDFLAGS for libtool.
      AC_MSG_RESULT([yes])
      H5_LDFLAGS="$H5_LDFLAGS -no-undefined"
      ;;
    *)
      ## Don't add in anything.
      AC_MSG_RESULT([no])
      ;;
  esac
fi

## ----------------------------------------------------------------------
## Use the macro _AC_SYS_LARGEFILE_MACRO_VALUE to test defines
## that might need to be set for largefile support to behave
## correctly. This macro is defined in acsite.m4 and overrides
## the version provided by Autoconf (as of v2.65). The custom
## macro additionally adds the appropriate defines to AM_CPPFLAGS
## so that later configure checks have them visible.

## Check for _FILE_OFFSET_BITS
_AC_SYS_LARGEFILE_MACRO_VALUE([_FILE_OFFSET_BITS], [64],
  [ac_cv_sys_file_offset_bits],
  [Number of bits in a file offset, on hosts where this is settable.],
  [_AC_SYS_LARGEFILE_TEST_INCLUDES])

## Check for _LARGE_FILES
if test "$ac_cv_sys_file_offset_bits" = unknown; then
  _AC_SYS_LARGEFILE_MACRO_VALUE([_LARGE_FILES], [1],
    [ac_cv_sys_large_files],
    [Define for large files, on AIX-style hosts.],
    [_AC_SYS_LARGEFILE_TEST_INCLUDES])
fi

## ----------------------------------------------------------------------
## Add necessary defines for Linux Systems.
##
case "$host_cpu-$host_vendor-$host_os" in
  *linux*)
    ## Make available various LFS-related routines using the following
    ## _LARGEFILE*_SOURCE macros.
    AM_CPPFLAGS="-D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE $AM_CPPFLAGS"

    ## Add POSIX support on Linux systems, so <features.h> defines
    ## __USE_POSIX, which is required to get the prototype for fdopen
    ## defined correctly in <stdio.h>.
    ##
    ## This flag was removed from h5cc as of 2009-10-17 when it was found
    ## that the flag broke compiling netCDF-4 code with h5cc, but kept in
    ## H5_CPPFLAGS because fdopen and HDfdopen fail without it. HDfdopen
    ## is used only by H5_debug_mask which is used only when debugging in
    ## H5_init_library (all in H5.c).  When the flag was removed this was
    ## the only compile failure noted.
    ##
    ## This was originally defined as _POSIX_SOURCE which was updated to
    ## _POSIX_C_SOURCE=199506L to expose a greater amount of POSIX
    ## functionality so clock_gettime and CLOCK_MONOTONIC are defined
    ## correctly. This was later updated to 200112L so that
    ## posix_memalign() is visible for the direct VFD code on Linux
    ## systems.
    ##
    ## POSIX feature information can be found in the gcc manual at:
    ## http://www.gnu.org/s/libc/manual/html_node/Feature-Test-Macros.html
    H5_CPPFLAGS="-D_POSIX_C_SOURCE=200112L $H5_CPPFLAGS"

    ## Need to add this so that O_DIRECT is visible for the direct
    ## VFD on Linux systems.
    H5_CPPFLAGS="-D_GNU_SOURCE $H5_CPPFLAGS"
    ;;
esac

## Need to add the AM_ and H5_ into CFLAGS/CPPFLAGS to make them visible
## for configure checks.
## Note: Both will be restored by the end of configure.
CPPFLAGS="$H5_CPPFLAGS $AM_CPPFLAGS $CPPFLAGS"
CFLAGS="$H5_CFLAGS $AM_CFLAGS $CFLAGS"

AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
]],
    [[off64_t n = 0;]])],
    [AC_CHECK_FUNCS([lseek64 fseeko64 ftello64 ftruncate64])],
    [AC_MSG_RESULT([skipping test for lseek64, fseeko64 , ftello64, ftruncate64 because off64_t is not defined])])

AC_CHECK_FUNCS([fseeko ftello])

AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/stat.h>
]],
[[struct stat64 sb;]])],
[AC_CHECK_FUNCS([stat64 fstat64])],
[AC_MSG_RESULT([skipping test for stat64 and fstat64])])

## Checkpoint the cache
AC_CACHE_SAVE

## Posix.1g types (C9x)
cat >>confdefs.h <<\EOF
#include <sys/types.h>
EOF

if test "X$C9x" = "Xyes"; then
  cat >>confdefs.h <<\EOF
#include <stdint.h>
EOF
fi

AC_CHECK_SIZEOF(        [int8_t], [1])
AC_CHECK_SIZEOF(       [uint8_t], [1])
AC_CHECK_SIZEOF(  [int_least8_t], [1])
AC_CHECK_SIZEOF( [uint_least8_t], [1])
AC_CHECK_SIZEOF(   [int_fast8_t], [1])
AC_CHECK_SIZEOF(  [uint_fast8_t], [1])

AC_CHECK_SIZEOF(       [int16_t], [2])
AC_CHECK_SIZEOF(      [uint16_t], [2])
AC_CHECK_SIZEOF( [int_least16_t], [2])
AC_CHECK_SIZEOF([uint_least16_t], [2])
AC_CHECK_SIZEOF(  [int_fast16_t], [2])
AC_CHECK_SIZEOF( [uint_fast16_t], [2])

AC_CHECK_SIZEOF(       [int32_t], [4])
AC_CHECK_SIZEOF(      [uint32_t], [4])
AC_CHECK_SIZEOF( [int_least32_t], [4])
AC_CHECK_SIZEOF([uint_least32_t], [4])
AC_CHECK_SIZEOF(  [int_fast32_t], [4])
AC_CHECK_SIZEOF( [uint_fast32_t], [4])

AC_CHECK_SIZEOF(       [int64_t], [8])
AC_CHECK_SIZEOF(      [uint64_t], [8])
AC_CHECK_SIZEOF( [int_least64_t], [8])
AC_CHECK_SIZEOF([uint_least64_t], [8])
AC_CHECK_SIZEOF(  [int_fast64_t], [8])
AC_CHECK_SIZEOF( [uint_fast64_t], [8])

AC_CHECK_SIZEOF([size_t], [4])
AC_CHECK_SIZEOF([ssize_t], [4])
AC_CHECK_SIZEOF([ptrdiff_t], [4])

cat >>confdefs.h <<\EOF
#include <sys/types.h> /*for off_t definition*/
EOF
AC_CHECK_SIZEOF([off_t], [4])
AC_CHECK_SIZEOF([off64_t], [8])

if test "X$C9x" = "Xyes"; then
  cat >>confdefs.h <<\EOF
#ifdef HAVE_STDBOOL_H
#include <stdbool.h> /* for bool definition */
#else
#define bool _Bool
#endif
EOF
AC_CHECK_SIZEOF([bool], [1])
fi

## Checkpoint the cache
AC_CACHE_SAVE

## ----------------------------------------------------------------------
## Check if the dev_t type is a scalar type (must come after the check for
## sys/types.h)
AC_MSG_CHECKING([if dev_t is scalar])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
  ]],
  [[dev_t d1, d2; if(d1==d2) return 0;]])],
  [AC_DEFINE([DEV_T_IS_SCALAR], [1],
            [Define if dev_t is a scalar])
  AC_MSG_RESULT([yes])],
  [AC_MSG_RESULT([no])])

## ----------------------------------------------------------------------
## Fake --with-xxx option to allow us to create a help message for the
## following --with-xxx options which can take either a =DIR or =INC,LIB
## specifier.
##
AC_ARG_WITH([fnord],
  [
 For the following --with-xxx options, you can specify where the header
 files and libraries are in two different ways:

    --with-xxx=INC,LIB - Specify individually the include directory and
                         library directory separated by a comma
    --with-xxx=DIR     - Specify only the directory which contains the
                         include/ and lib/ subdirectories
  ])

## ----------------------------------------------------------------------
## Is the dmalloc present? It has a header file `dmalloc.h' and a library
## `-ldmalloc' and their locations might be specified with the `--with-dmalloc'
## command-line switch. The value is an include path and/or a library path.
## If the library path is specified then it must be preceded by a comma.
##
AC_ARG_WITH([dmalloc],
            [AS_HELP_STRING([--with-dmalloc=DIR],
                            [Use dmalloc memory debugging aid [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_DMALLOC="yes"
    AC_CHECK_HEADERS([dmalloc.h],, [unset HAVE_DMALLOC])
    if test "x$HAVE_DMALLOC" = "xyes"; then
      AC_CHECK_LIB([dmalloc], [dmalloc_shutdown],, [unset HAVE_DMALLOC])
    fi
    if test -z "$HAVE_DMALLOC" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find dmalloc library])
    fi
    ;;
  no)
    HAVE_DMALLOC="no"
    AC_MSG_CHECKING([for dmalloc library])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_DMALLOC="yes"
    case "$withval" in
      *,*)
        dmalloc_inc="`echo $withval |cut -f1 -d,`"
        dmalloc_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          dmalloc_inc="$withval/include"
          dmalloc_lib="$withval/lib"
        fi
        ;;
    esac

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$dmalloc_inc"; then
      CPPFLAGS="$CPPFLAGS -I$dmalloc_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$dmalloc_inc"
    fi

    AC_CHECK_HEADERS([dmalloc.h],,[CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"] [unset HAVE_DMALLOC])

    if test "x$HAVE_DMALLOC" = "xyes"; then
      if test -n "$dmalloc_lib"; then
        LDFLAGS="$LDFLAGS -L$dmalloc_lib"
        AM_LDFLAGS="$AM_LDFLAGS -L$dmalloc_lib"
      fi

      AC_CHECK_LIB([dmalloc], [dmalloc_shutdown],, [LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_DMALLOC])
    fi

    if test -z "$HAVE_DMALLOC" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find dmalloc library])
    fi
    ;;
esac

## ----------------------------------------------------------------------
## Is the axe present? It has a header file `axe.h' and a library
## `-laxe' and their locations might be specified with the `--with-axe'
## command-line switch. The value is an include path and/or a library path.
## If the library path is specified then it must be preceded by a comma.
##
AC_ARG_WITH([axe],
            [AS_HELP_STRING([--with-axe=DIR],
                            [Use axe [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_AXE="yes"
    AC_CHECK_HEADERS([axe.h])
    AC_CHECK_LIB([axe], [AXEcreate_engine],[MYAXE_LIBS='-laxe'], [unset HAVE_AXE])
    AC_SUBST([MYAXE_LIBS])
    if test -z "$HAVE_AXE" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find axe library])
    fi
    ;;
  no)
    HAVE_AXE="no"
    AC_MSG_CHECKING([for axe library])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_AXE="yes"
    case "$withval" in
      *,*)
        axe_inc="`echo $withval |cut -f1 -d,`"
        axe_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          axe_inc="$withval/include"
          axe_lib="$withval/lib"
        fi
        ;;
    esac

    ## Trying to include -I/usr/include and -L/usr/lib is redundant and
    ## can mess some compilers up.
    if test "X$axe_inc" = "X/usr/include"; then
      axe_inc=""
    fi
    if test "X$axe_lib" = "X/usr/lib"; then
      axe_lib=""
    fi

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$axe_inc"; then
      CPPFLAGS="$CPPFLAGS -I$axe_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$axe_inc"
    fi

    AC_CHECK_HEADERS([axe.h],,[CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"])

    if test -n "$axe_lib"; then
      LDFLAGS="$LDFLAGS -L$axe_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$axe_lib"
    fi

    AC_CHECK_LIB([axe], [AXEcreate_engine],, 
		[LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_AXE])

    if test -z "$HAVE_AXE" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find axe library])
    fi
    ;;
esac

## ----------------------------------------------------------------------
## Is plfs present? It has a header file `plfs.h' and a library
## `-lplfs' and their locations might be specified with the `--with-plfs'
## command-line switch. The value is an include path and/or a library path.
## If the library path is specified then it must be preceded by a comma.
##
AC_ARG_WITH([plfs],
            [AS_HELP_STRING([--with-plfs=DIR],
                            [Use plfs [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_PLFS="yes"
    AC_CHECK_HEADERS([plfs.h])
    AC_CHECK_LIB([plfs], [plfs_utime], [MYPLFS_LIBS='-lplfs'], [unset HAVE_PLFS])
    AC_SUBST([MYPLFS_LIBS])
    if test -z "$HAVE_PLFS" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find plfs library])
    fi
    ;;
  no)
    HAVE_PLFS="no"
    AC_MSG_CHECKING([for plfs library])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_PLFS="yes"
    case "$withval" in
      *,*)
        plfs_inc="`echo $withval |cut -f1 -d,`"
        plfs_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          plfs_inc="$withval/include"
          plfs_lib="$withval/lib"
        fi
        ;;
    esac

    ## Trying to include -I/usr/include and -L/usr/lib is redundant and
    ## can mess some compilers up.
    if test "X$plfs_inc" = "X/usr/include"; then
      plfs_inc=""
    fi
    if test "X$plfs_lib" = "X/usr/lib"; then
      plfs_lib=""
    fi

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$plfs_inc"; then
      CPPFLAGS="$CPPFLAGS -I$plfs_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$plfs_inc"
    fi

    AC_CHECK_HEADERS([plfs.h],,[CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"])

    if test -n "$plfs_lib"; then
      LDFLAGS="$LDFLAGS -L$plfs_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$plfs_lib"
    fi

    AC_CHECK_LIB([plfs], [plfs_utime],, 
		[LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_PLFS])

    if test -z "$HAVE_PLFS" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find plfs library])
    fi
    ;;
esac

## ----------------------------------------------------------------------
## Is the daos present? It has a header file `daos.h' and a library
## `-ldaos' and their locations might be specified with the `--with-daos'
## command-line switch. The value is an include path and/or a library path.
## If the library path is specified then it must be preceded by a comma.
##
AC_ARG_WITH([daos],
            [AS_HELP_STRING([--with-daos=DIR],
                            [Use daos [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_DAOS="yes"
    AC_CHECK_HEADERS([daos_api.h] [daos_types.h])
    AC_CHECK_LIB([daos], [daos_init],[MYDAOS_LIBS='-ldaos'], [unset HAVE_DAOS])
    AC_SUBST([MYDAOS_LIBS])
    if test -z "$HAVE_DAOS" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find daos library])
    fi
    ;;
  no)
    HAVE_DAOS_POSIX="no"
    AC_MSG_CHECKING([for daos library])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_DAOS="yes"
    case "$withval" in
      *,*)
        daos_inc="`echo $withval |cut -f1 -d,`"
        daos_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          daos_inc="$withval/include/"
          daos_lib="$withval/lib64"
        fi
        ;;
    esac

    ## Trying to include -I/usr/include and -L/usr/lib is redundant and
    ## can mess some compilers up.
    if test "X$daos_inc" = "X/usr/include"; then
      daos_inc=""
    fi
    if test "X$daos_lib" = "X/usr/lib"; then
      daos_lib=""
    fi

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$daos_inc"; then
      CPPFLAGS="$CPPFLAGS -I$daos_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$daos_inc"
    fi

    AC_CHECK_HEADERS([daos_api.h],,[CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"])

    if test -n "$daos_lib"; then
      LDFLAGS="$LDFLAGS -L$daos_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$daos_lib"
    fi

    AC_CHECK_LIB([daos], [daos_container_close],, 
		[LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_DAOS])

    if test -z "$HAVE_DAOS" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find daos library])
    fi
    ;;
esac

## ----------------------------------------------------------------------
## Is the iod present? It has a header file `IOD.h' and a library
## `-liod' and their locations might be specified with the `--with-iod'
## command-line switch. The value is an include path and/or a library path.
## If the library path is specified then it must be preceded by a comma.
##
AC_ARG_WITH([iod],
            [AS_HELP_STRING([--with-iod=DIR],
                            [Use iod [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_IOD="yes"
    AC_CHECK_HEADERS([iod_api.h])
    AC_CHECK_LIB([iod], [iod_initialize],[MYIOD_LIBS="-liod"], [unset HAVE_IOD])
    AC_SUBST([MYIOD_LIBS])
    if test -z "$HAVE_IOD" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find iod library])
    fi
    ;;
  no)
    HAVE_IOD="no"
    AC_MSG_CHECKING([for iod library])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_IOD="yes"
    case "$withval" in
      *,*)
        iod_inc="`echo $withval |cut -f1 -d,`"
        iod_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          iod_inc="$withval/include"
          iod_lib="$withval/lib"
        fi
        ;;
    esac

    ## Trying to include -I/usr/include and -L/usr/lib is redundant and
    ## can mess some compilers up.
    if test "X$iod_inc" = "X/usr/include"; then
      iod_inc=""
    fi
    if test "X$iod_lib" = "X/usr/lib"; then
      iod_lib=""
    fi

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$iod_inc"; then
      CPPFLAGS="$CPPFLAGS -I$iod_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$iod_inc"
    fi

    AC_CHECK_HEADERS([iod_api.h],,[CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"])

    if test -n "$iod_lib"; then
      LDFLAGS="$LDFLAGS -L$iod_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$iod_lib"
    fi

    AC_CHECK_LIB([iod], [iod_finalize],, 
		[LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_IOD],
		)

    if test -z "$HAVE_IOD" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find iod library])
    fi
    ;;
esac

## ----------------------------------------------------------------------
## Is the IOD corrupt tool present?
##
AC_ARG_WITH([iod-corrupt-tool],
            [AS_HELP_STRING([--with-iod-corrupt-tool=DIR],
                            [Use iod-corrupt-tool [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_IOD_CORRUPT_TOOL="yes"
    AC_CHECK_HEADERS([iod_corrupt_tool.h], [HAVE_IOD_CORRUPT_TOOL_H="yes"], [unset HAVE_IOD_CORRUPT_TOOL])
    if test "x$HAVE_IOD_CORRUPT_TOOL" = "xyes" -a "x$HAVE_IOD_CORRUPT_TOOL_H" = "xyes"; then
      AC_CHECK_LIB([iodcorrupt], [corrupt_data],, [unset HAVE_IOD_CORRUPT_TOOL])
    fi
    if test -z "$HAVE_IOD_CORRUPT_TOOL"; then
      if test -n "$HDF5_CONFIG_ABORT"; then
        AC_MSG_ERROR([couldn't find IOD corrupt tool library])
      fi
    fi
    ;;
  no)
    HAVE_IOD_CORRUPT_TOOL="no"
    AC_MSG_CHECKING([for iod corrupt tool])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_IOD_CORRUPT_TOOL="yes"
    case "$withval" in
      *,*)
        iod_ct_inc="`echo $withval | cut -f1 -d,`"
        iod_ct_lib="`echo $withval | cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          iod_ct_inc="$withval/include"
          iod_ct_lib="$withval/lib"
        fi
        ;;
    esac

    ## Trying to include -I/usr/include and -L/usr/lib is redundant and
    ## can mess some compilers up.
    if test "X$iod_ct_inc" = "X/usr/include"; then
      iod_ct_inc=""
    fi
    if test "X$iod_ct_lib" = "X/usr/lib"; then
      iod_ct_lib=""
    fi

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$iod_ct_inc"; then
      CPPFLAGS="$CPPFLAGS -I$iod_ct_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$iod_ct_inc"
    fi

    AC_CHECK_HEADERS([iod_corrupt_tool.h],
                     [HAVE_IOD_CORRUPT_TOOL_H="yes"],
                     [CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"] [unset HAVE_IOD_CORRUPT_TOOL])

    if test -n "$iod_ct_lib"; then
      LDFLAGS="$LDFLAGS -L$iod_ct_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$iod_ct_lib"
    fi

    if test "x$HAVE_IOD_CORRUPT_TOOL" = "xyes" -a "x$HAVE_IOD_CORRUPT_TOOL_H" = "xyes"; then
      AC_CHECK_LIB([iodcorrupt], [corrupt_data],,
                   [LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_IOD_CORRUPT_TOOL])
    fi

    if test -z "$HAVE_IOD_CORRUPT_TOOL"; then
      if test -n "$HDF5_CONFIG_ABORT"; then
        AC_MSG_ERROR([couldn't find IOD corrupt tool library])
      fi
    fi
    ;;
esac

if test "x$HAVE_IOD_CORRUPT_TOOL" = "xyes" -a "x$HAVE_IOD_CORRUPT_TOOL_H" = "xyes"; then
  AC_DEFINE([HAVE_IOD_CORRUPT_TOOL], [1], [Define if IOD corruption code should be built])
fi

## ----------------------------------------------------------------------
## Is the iod present? It has a header file `IOD.h' and a library
## `-liod' and their locations might be specified with the `--with-iod'
## command-line switch. The value is an include path and/or a library path.
## If the library path is specified then it must be preceded by a comma.
##
AC_ARG_WITH([iodp],
            [AS_HELP_STRING([--with-iodp=DIR],
                            [Use iodp [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_IODP="yes"
    AC_CHECK_HEADERS([iod_api.h])
    AC_CHECK_LIB([iod], [iod_initialize],[MYIOD_LIBS="-liod -lmdhim -lpbl"], [unset HAVE_IODP])
    AC_SUBST([MYIODP_LIBS])
    if test -z "$HAVE_IODP" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find iodp libraries])
    fi
    ;;
  no)
    HAVE_IODP="no"
    AC_MSG_CHECKING([for iodp libraries])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_IODP="yes"
    case "$withval" in
      *,*)
        iod_inc="`echo $withval |cut -f1 -d,`"
        iod_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          iod_inc="$withval/include"
          iod_lib="$withval/lib"
          pbl_inc="$withval/include"
          pbl_lib="$withval/lib"
          mdhim_inc="$withval/include"
          mdhim_lib="$withval/lib"
        fi
        ;;
    esac

    ## Trying to include -I/usr/include and -L/usr/lib is redundant and
    ## can mess some compilers up.
    if test "X$iod_inc" = "X/usr/include"; then
      iod_inc=""
    fi
    if test "X$iod_lib" = "X/usr/lib"; then
      iod_lib=""
    fi

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$iod_inc"; then
      CPPFLAGS="$CPPFLAGS -I$iod_inc -I$mdhim_inc -I$pbl_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$iod_inc -I$mdhim_inc -I$pbl_inc"
    fi

    AC_CHECK_HEADERS([iod_api.h],,[CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"])

    if test -n "$iod_lib"; then
      LDFLAGS="$LDFLAGS -L$iod_lib -L$mdhim_lib -L$pbl_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$iod_lib -L$mdhim_lib -L$pbl_lib"
    fi

    AC_CHECK_LIB([pbl], [pbl_malloc],, 
		[LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_IOD])
    AC_CHECK_LIB([mdhim], [mdhimFinalize],, 
		[LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_IOD],
		[-lpbl])
    AC_CHECK_LIB([iod], [iod_finalize],, 
		[LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_IOD],
		[-lmdhim -lpbl])

    if test -z "$HAVE_IODP" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find iod libraries])
    fi
    ;;
esac

## ----------------------------------------------------------------------
## Is the GNU zlib present? It has a header file `zlib.h' and a library
## `-lz' and their locations might be specified with the `--with-zlib'
## command-line switch. The value is an include path and/or a library path.
## If the library path is specified then it must be preceded by a comma.
##
AC_SUBST([USE_FILTER_DEFLATE]) USE_FILTER_DEFLATE="no"
AC_ARG_WITH([zlib],
            [AS_HELP_STRING([--with-zlib=DIR],
                            [Use zlib library for external deflate I/O
                             filter [default=yes]])],,
            [withval=yes])

case $withval in
  yes)
    HAVE_ZLIB="yes"
    AC_CHECK_HEADERS([zlib.h], [HAVE_ZLIB_H="yes"], [unset HAVE_ZLIB])
    if test "x$HAVE_ZLIB" = "xyes" -a "x$HAVE_ZLIB_H" = "xyes"; then
      AC_CHECK_LIB([z], [compress2],, [unset HAVE_ZLIB])
    fi
    if test -z "$HAVE_ZLIB"; then
      if test -n "$HDF5_CONFIG_ABORT"; then
        AC_MSG_ERROR([couldn't find zlib library])
      fi
    else
      AC_CHECK_FUNC([compress2], [HAVE_COMPRESS2="yes"])
    fi
    ;;
  no)
    HAVE_ZLIB="no"
    AC_MSG_CHECKING([for zlib])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_ZLIB="yes"
    case "$withval" in
      *,*)
        zlib_inc="`echo $withval | cut -f1 -d,`"
        zlib_lib="`echo $withval | cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          zlib_inc="$withval/include"
          zlib_lib="$withval/lib"
        fi
        ;;
    esac

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$zlib_inc"; then
      CPPFLAGS="$CPPFLAGS -I$zlib_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$zlib_inc"
    fi

    AC_CHECK_HEADERS([zlib.h],
                     [HAVE_ZLIB_H="yes"],
                     [CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"] [unset HAVE_ZLIB])

    if test -n "$zlib_lib"; then
      LDFLAGS="$LDFLAGS -L$zlib_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$zlib_lib"
    fi

    if test "x$HAVE_ZLIB" = "xyes" -a "x$HAVE_ZLIB_H" = "xyes"; then
      AC_CHECK_LIB([z], [compress2],,
                   [LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_ZLIB])
    fi

    if test -z "$HAVE_ZLIB"; then
      if test -n "$HDF5_CONFIG_ABORT"; then
        AC_MSG_ERROR([couldn't find zlib library])
      fi
    else
      AC_CHECK_FUNC([compress2], [HAVE_COMPRESS2="yes"])
    fi
    ;;
esac

if test "x$HAVE_ZLIB" = "xyes" -a "x$HAVE_ZLIB_H" = "xyes" -a "x$HAVE_COMPRESS2" = "xyes"; then
  AC_DEFINE([HAVE_FILTER_DEFLATE], [1], [Define if support for deflate (zlib) filter is enabled])
  USE_FILTER_DEFLATE="yes"

  ## Add "deflate" to external filter list
  if test "X$EXTERNAL_FILTERS" != "X"; then
    EXTERNAL_FILTERS="${EXTERNAL_FILTERS},"
  fi
  EXTERNAL_FILTERS="${EXTERNAL_FILTERS}deflate(zlib)"
fi


## ----------------------------------------------------------------------
## Is the szlib present? It has a header file `szlib.h' and a library
## `-lsz' and their locations might be specified with the `--with-szlib'
## command-line switch. The value is an include path and/or a library path.
## If the library path is specified then it must be preceded by a comma.
##
AC_SUBST([USE_FILTER_SZIP]) USE_FILTER_SZIP="no"
AC_ARG_WITH([szlib],
            [AS_HELP_STRING([--with-szlib=DIR],
                            [Use szlib library for external szlib I/O
                             filter [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_SZLIB="yes"
    AC_CHECK_HEADERS([szlib.h], [HAVE_SZLIB_H="yes"], [unset HAVE_SZLIB])
    if test "x$HAVE_SZLIB" = "xyes" -a "x$HAVE_SZLIB_H" = "xyes"; then
      AC_CHECK_LIB([sz], [SZ_BufftoBuffCompress],, [unset HAVE_SZLIB])
    fi
    if test -z "$HAVE_SZLIB" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find szlib library])
    fi
    ;;
  no)
    HAVE_SZLIB="no"
    AC_MSG_CHECKING([for szlib])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_SZLIB="yes"
    case "$withval" in
      *,*)
        szlib_inc="`echo $withval |cut -f1 -d,`"
        szlib_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          szlib_inc="$withval/include"
          szlib_lib="$withval/lib"
        fi
        ;;
    esac

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$szlib_inc"; then
      CPPFLAGS="$CPPFLAGS -I$szlib_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$szlib_inc"
    fi

    AC_CHECK_HEADERS([szlib.h],
                     [HAVE_SZLIB_H="yes"],
                     [CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"] [unset HAVE_SZLIB])

    if test -n "$szlib_lib"; then
      LDFLAGS="$LDFLAGS -L$szlib_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$szlib_lib"
    fi

    if test "x$HAVE_SZLIB" = "xyes" -a "x$HAVE_SZLIB_H" = "xyes"; then
      AC_CHECK_LIB([sz], [SZ_BufftoBuffCompress],,
                   [LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_SZLIB])
    fi

    if test -z "$HAVE_SZLIB" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find szlib library])
    fi
    ;;
esac

if test "x$HAVE_SZLIB" = "xyes" -a "x$HAVE_SZLIB_H" = "xyes"; then
  ## SZLIB library is available.  Check if it can encode
  AC_MSG_CHECKING([for szlib encoder])

  ## Set LD_LIBRARY_PATH so encoder test can find the library and run.
  ## Also add LL_PATH substitution to Makefiles so they can use the
  ## path as well, for testing examples.
  if test -z "$LD_LIBRARY_PATH"; then
    export LD_LIBRARY_PATH="$szlib_lib"
  else
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$szlib_lib"
  fi

  AC_SUBST([LL_PATH]) LL_PATH="$LD_LIBRARY_PATH"

  AC_CACHE_VAL([hdf5_cv_szlib_can_encode],
        [AC_RUN_IFELSE(
            [AC_LANG_PROGRAM([
                #include "szlib.h"
            ],[[
                /* SZ_encoder_enabled returns 1 if encoder is present */
                if(SZ_encoder_enabled() == 1)
                    exit(0);
                else
                    exit(1);
            ]])]
        , [hdf5_cv_szlib_can_encode=yes], [hdf5_cv_szlib_can_encode=no],)]
   )

  AC_DEFINE([HAVE_FILTER_SZIP], [1],
            [Define if support for szip filter is enabled])
  USE_FILTER_SZIP="yes"

  if test ${hdf5_cv_szlib_can_encode} = "yes"; then
    AC_MSG_RESULT([yes])
  fi
  if test ${hdf5_cv_szlib_can_encode} = "no"; then
    AC_MSG_RESULT([no])
  fi

  ## Add "szip" to external filter list
  if test ${hdf5_cv_szlib_can_encode} = "yes"; then
    if test "X$EXTERNAL_FILTERS" != "X"; then
      EXTERNAL_FILTERS="${EXTERNAL_FILTERS},"
    fi
    EXTERNAL_FILTERS="${EXTERNAL_FILTERS}szip(encoder)"
  fi
  if test ${hdf5_cv_szlib_can_encode} = "no"; then
    if test "X$EXTERNAL_FILTERS" != "X"; then
      EXTERNAL_FILTERS="${EXTERNAL_FILTERS},"
    fi
    EXTERNAL_FILTERS="${EXTERNAL_FILTERS}szip(no encoder)"
  fi
fi

AM_CONDITIONAL([BUILD_SHARED_SZIP_CONDITIONAL], [test "X$USE_FILTER_SZIP" = "Xyes" && test "X$LL_PATH" != "X"])

## Checkpoint the cache
AC_CACHE_SAVE

## ----------------------------------------------------------------------
## Enable thread-safe version of library.  It requires Pthreads support
## on POSIX systems.
##
AC_MSG_CHECKING([for thread safe support])
AC_ARG_ENABLE([threadsafe],
              [AS_HELP_STRING([--enable-threadsafe],
                              [Enable thread-safe capability. Not compatible with the high-level library, Fortran, or C++ wrappers.
                              [default=no]])],
              [THREADSAFE=$enableval])

## NOTE: The high-level, C++, and Fortran interfaces are not compatible
## with the thread-safety option because the lock is not hoisted
## into the higher-level API calls.

## --enable-threadsafe is incompatible with --enable-hl unless
## --enable-unsupported has been specified on the configure line.
##
## Note that the high-level library is enabled by default so most
## users will have to add --disable-hl to the configure options.
if test "X${ALLOW_UNSUPPORTED}" != "Xyes"; then
  if test "X${HDF5_HL}" = "Xyes" -a "X${enable_threadsafe}" = "Xyes"; then
    AC_MSG_ERROR([The thread-safe library is incompatible with the high-level library. --disable-hl can be used to prevent building the high-level library (recommended). Alternatively, --enable-unsupported will allow building the high-level library, though this configuration is not supported by The HDF Group.])
  fi
fi

## The --enable-threadsafe flag is not compatible with --enable-cxx.
## If the user tried to specify both flags, throw an error, unless
## they also provided the --enable-unsupported flag.
if test "X${ALLOW_UNSUPPORTED}" != "Xyes"; then
  if test "X${HDF_CXX}" = "Xyes" -a "X${enable_threadsafe}" = "Xyes"; then
    AC_MSG_ERROR([--enable-cxx and --enable-threadsafe flags are incompatible. Use --enable-unsupported to override this error.])
  fi
fi

## --enable-threadsafe is also incompatible with --enable-fortran unless
## --enable-unsupported has been specified on the configure line.
if test "X${ALLOW_UNSUPPORTED}" != "Xyes"; then
  if test "X${HDF_FORTRAN}" = "Xyes" -a "X${enable_threadsafe}" = "Xyes"; then
    AC_MSG_ERROR([--enable-fortran and --enable-threadsafe flags are incompatible. Use --enable-unsupported to override this error.])
  fi
fi


case "X-$THREADSAFE" in
  X-|X-no)
    AC_MSG_RESULT([no])
    ;;
  X-yes)
    THREADSAFE=yes
    AC_MSG_RESULT([yes])
    ;;
  *)
    AC_MSG_RESULT([error])
    AC_MSG_ERROR([\'$enableval\' is not a valid threadsafe type])
    ;;
esac

if test "X$THREADSAFE" = "Xyes"; then
    AC_DEFINE([HAVE_THREADSAFE], [1], [Define if we have thread safe support])

    ## ----------------------------------------------------------------------
    ## Is the Pthreads library present?  It has a header file `pthread.h' and
    ## a library `-lpthread' and their locations might be specified with the
    ## `--with-pthread' command-line switch.  The value is an include path
    ## and/or a library path.  If the library path is specified then it must
    ## be preceded by a comma.
    ##
    ## Thread-safety in HDF5 only uses Pthreads via configure, so the
    ## default is "check", though this only has an effect when
    ## --enable-threadsafe is specified.
    AC_SUBST([HAVE_PTHREAD]) HAVE_PTHREAD=yes
    AC_ARG_WITH([pthread],
                [AS_HELP_STRING([--with-pthread=DIR],
                                [Specify alternative path to Pthreads library when
                                thread-safe capability is built.])],,
                [withval=check])

    case "$withval" in
      check | yes)
        AC_CHECK_HEADERS([pthread.h],, [unset HAVE_PTHREAD])
        if test "x$HAVE_PTHREAD" = "xyes"; then
          AC_CHECK_LIB([pthread], [pthread_self],, [unset HAVE_PTHREAD])
        fi
        ;;
      no)
        AC_MSG_ERROR([Must use Pthreads with thread safety])
        ;;
      *)
        case "$withval" in
          *,*)
            pthread_inc="`echo $withval | cut -f1 -d,`"
            pthread_lib="`echo $withval | cut -f2 -d, -s`"
            ;;
          *)
            if test -n "$withval"; then
              pthread_inc="$withval/include"
              pthread_lib="$withval/lib"
            fi
            ;;
        esac

        if test -n "$pthread_inc"; then
          saved_CPPFLAGS="$CPPFLAGS"
          saved_AM_CPPFLAGS="$AM_CPPFLAGS"
          CPPFLAGS="$CPPFLAGS -I$pthread_inc"
          AM_CPPFLAGS="$AM_CPPFLAGS -I$pthread_inc"
          AC_CHECK_HEADERS([pthread.h],, [CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"; unset HAVE_PTHREAD])
        else
          AC_CHECK_HEADERS([pthread.h],, [unset HAVE_PTHREAD])
        fi

        if test "x$HAVE_PTHREAD" = "xyes"; then
          if test -n "$pthread_lib"; then
            saved_LDFLAGS="$LDFLAGS"
            saved_AM_LDFLAGS="$AM_LDFLAGS"
            LDFLAGS="$LDFLAGS -L$pthread_lib"
            AM_LDFLAGS="$AM_LDFLAGS -L$pthread_lib"
            AC_CHECK_LIB([pthread], [pthread_self],,
                         [LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_PTHREAD])
          else
            AC_CHECK_LIB([pthread], [pthread_self],, [unset HAVE_PTHREAD])
          fi
        fi
        ;;
    esac

    ## ----------------------------------------------------------------------
    ## Check if pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM)
    ## is supported on this system
    ##
    ## Unfortunately, this probably needs to be an AC_RUN_IFELSE since
    ## it's impossible to determine if PTHREAD_SCOPE_SYSTEM is
    ## supported a priori. POSIX.1-2001 requires that a conformant
    ## system need only support one of SYSTEM or PROCESS scopes.
    ##
    ## For cross-compiling, we've added a pessimistic 'no'. You can
    ## hand-hack the config file if you know otherwise.
    AC_MSG_CHECKING([Pthreads supports system scope])
    AC_CACHE_VAL([hdf5_cv_system_scope_threads],
      [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM([
            #if STDC_HEADERS
            #include <stdlib.h>
            #include <pthread.h>
            #endif
        ],[
              pthread_attr_t attribute;
              int ret;

              pthread_attr_init(&attribute);
              ret=pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM);
              exit(ret==0 ? 0 : 1);
        ])]
      , [hdf5_cv_system_scope_threads=yes], [hdf5_cv_system_scope_threads=no], [hdf5_cv_system_scope_threads=no])])

    if test ${hdf5_cv_system_scope_threads} = "yes"; then
      AC_DEFINE([SYSTEM_SCOPE_THREADS], [1],
                [Define if your system supports pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM) call.])
      AC_MSG_RESULT([yes])
    else
      AC_MSG_RESULT([no])
      AC_MSG_NOTICE([Always 'no' if cross-compiling. Edit the config file if your platform supports pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM).])
    fi
fi

## ----------------------------------------------------------------------
## Check for MONOTONIC_TIMER support (used in clock_gettime).  This has
## to be done after any POSIX defines to ensure that the test gets
## the correct POSIX level on linux.
AC_CHECK_DECL([CLOCK_MONOTONIC],[have_clock_monotonic="yes"],[have_clock_monotonic="no"],[[#include <time.h>]])

## ----------------------------------------------------------------------
## How does one figure out the local time zone?  Anyone know of a
## Posix way to do this?
##

## First check if `struct tm' has a `tm_gmtoff' member.
AC_MSG_CHECKING([for tm_gmtoff in struct tm])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
  #include <sys/time.h>
  #include <time.h>
]], [[struct tm tm; tm.tm_gmtoff=0;]])],
  [AC_DEFINE([HAVE_TM_GMTOFF], [1],
          [Define if tm_gmtoff is a member of struct tm])
    AC_MSG_RESULT([yes])],
  [AC_MSG_RESULT([no])])

## Check whether the global variable `timezone' is defined.
AC_MSG_CHECKING([for global timezone variable])

case "`uname`" in
  CYGWIN*)
    AC_MSG_RESULT([disabled in CYGWIN])
    ;;
  *)
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
    #include <sys/time.h>
    #include <time.h>]], [[timezone=0;]])],
    [AC_DEFINE([HAVE_TIMEZONE], [1],
              [Define if timezone is a global variable])
      AC_MSG_RESULT([yes])],
    [AC_MSG_RESULT([no])])
    ;;
esac


## ----------------------------------------------------------------------
## Does the struct stat have the st_blocks field?  This field is not Posix.
##
AC_MSG_CHECKING([for st_blocks in struct stat])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM[[
  #include <sys/stat.h>]],[[struct stat sb; sb.st_blocks=0;]])],
  [AC_DEFINE([HAVE_STAT_ST_BLOCKS], [1],
          [Define if struct stat has the st_blocks field])
    AC_MSG_RESULT([yes])],
  [AC_MSG_RESULT([no])])

## ----------------------------------------------------------------------
## How do we figure out the width of a tty in characters?
##
AC_CHECK_FUNCS([_getvideoconfig gettextinfo])
case "`uname`" in
  CYGWIN*)
    ;;
  *)
    AC_CHECK_FUNCS([GetConsoleScreenBufferInfo])
    ;;
esac
AC_CHECK_FUNCS([_scrsize ioctl])

AC_MSG_CHECKING([for struct videoconfig])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[struct videoconfig w; w.numtextcols=0;]])],
  [AC_DEFINE([HAVE_STRUCT_VIDEOCONFIG], [1],
          [Define if struct videoconfig is defined])
    AC_MSG_RESULT([yes])],
  [AC_MSG_RESULT([no])])

AC_MSG_CHECKING([for struct text_info])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[struct text_info w; w.screenwidth=0;]])],
  [AC_DEFINE([HAVE_STRUCT_TEXT_INFO], [1],
          [Define if struct text_info is defined])
    AC_MSG_RESULT([yes])],
  [AC_MSG_RESULT([no])])

AC_MSG_CHECKING([for TIOCGWINSZ])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/ioctl.h>
]],[[int w=TIOCGWINSZ;]])],
  [AC_DEFINE([HAVE_TIOCGWINSZ], [1],
          [Define if the ioctl TIOGWINSZ is defined])
    AC_MSG_RESULT([yes])],
  [AC_MSG_RESULT([no])])

AC_MSG_CHECKING([for TIOCGETD])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/ioctl.h>
]],[[int w=TIOCGETD;]])],
  [AC_DEFINE([HAVE_TIOCGETD], [1],
          [Define if the ioctl TIOCGETD is defined])
    AC_MSG_RESULT([yes])],
  [AC_MSG_RESULT([no])])


## ----------------------------------------------------------------------
## Check for functions.
##
## NOTE: clock_gettime may require linking to the rt or posix4 library
##       so we'll search for it before calling AC_CHECK_FUNCS.
AC_SEARCH_LIBS([clock_gettime], [rt posix4])
AC_CHECK_FUNCS([alarm clock_gettime difftime fork frexpf frexpl])
AC_CHECK_FUNCS([gethostname getpwuid getrusage gettimeofday])
AC_CHECK_FUNCS([lstat rand_r random setsysinfo])
AC_CHECK_FUNCS([signal longjmp setjmp siglongjmp sigsetjmp sigprocmask])
AC_CHECK_FUNCS([snprintf srandom strdup symlink system])
AC_CHECK_FUNCS([tmpfile asprintf vasprintf vsnprintf waitpid])

## ----------------------------------------------------------------------
## Check compiler characteristics
##
AC_C_CONST

AC_MSG_CHECKING([if the compiler understands  __inline__])
AC_COMPILE_IFELSE(
    [AC_LANG_SOURCE([[static __inline__ void f(void){return;};]])],
    [AC_DEFINE([HAVE___INLINE__], [1], [Define if the compiler understands __inline__]) AC_MSG_RESULT([yes])],
    [AC_MSG_RESULT([no])]
)

AC_MSG_CHECKING([if the compiler understands __inline])
AC_COMPILE_IFELSE(
    [AC_LANG_SOURCE([[static __inline void f(void){return;};]])],
    [AC_DEFINE([HAVE___INLINE], [1], [Define if the compiler understands __inline]) AC_MSG_RESULT([yes])],
    [AC_MSG_RESULT([no])]
)

AC_MSG_CHECKING([if the compiler understands inline])
AC_COMPILE_IFELSE(
    [AC_LANG_SOURCE([[static inline void f(void){return;};]])],
    [AC_DEFINE([HAVE_INLINE], [1], [Define if the compiler understands inline]) AC_MSG_RESULT([yes])],
    [AC_MSG_RESULT([no])]
)

AC_MSG_CHECKING([for __attribute__ extension])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[int __attribute__((unused)) x]])],
               [AC_DEFINE([HAVE_ATTRIBUTE], [1],
                         [Define if the __attribute__(()) extension is present])
                 AC_MSG_RESULT([yes])],
               [AC_MSG_RESULT([no])])

AC_MSG_CHECKING([for __func__ extension])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[ const char *fname = __func__; ]])],
               [AC_DEFINE([HAVE_C99_FUNC], [1],
                         [Define if the compiler understands the __func__ keyword])
                 AC_MSG_RESULT([yes])],
               [AC_MSG_RESULT([no])])
AC_MSG_CHECKING([for __FUNCTION__ extension])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],,[[ const char *fname = __FUNCTION__; ]])],
               [AC_DEFINE([HAVE_FUNCTION], [1],
                         [Define if the compiler understands the __FUNCTION__ keyword])
                 AC_MSG_RESULT([yes])],
               [AC_MSG_RESULT([no])])
AC_MSG_CHECKING([for C99 designated initialization support])
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[
                typedef struct {
                    int x;
                    union {
                        int i;
                        double d;
                    } u;
                } di_struct_t;
                di_struct_t x = {0, { .d = 0.0}}; ]])], 
               [AC_DEFINE([HAVE_C99_DESIGNATED_INITIALIZER], [1],
                         [Define if the compiler understands C99 designated initialization of structs and unions])
                 AC_MSG_RESULT([yes])],
               [AC_MSG_RESULT([no])])

## ----------------------------------------------------------------------
## Try to figure out how to print `long long'.  Some machines use `%lld'
## and others use `%qd'.  There may be more!  The final `l' is a
## default in case none of the others work.
##
AC_MSG_CHECKING([how to print long long])
AC_CACHE_VAL([hdf5_cv_printf_ll], [

for hdf5_cv_printf_ll in l ll L q unknown; do
   AC_RUN_IFELSE(
        [AC_LANG_PROGRAM([
            #include <stdio.h>
            #include <stdlib.h>
            #include <string.h>
        ],[[
            char *s = malloc(128);
            long long x = (long long)1048576 * (long long)1048576;
            sprintf(s,"%${hdf5_cv_printf_ll}d",x);
            exit(strcmp(s,"1099511627776"));
        ]])]
   , [break],,[continue])
done])

AC_MSG_RESULT([%${hdf5_cv_printf_ll}d and %${hdf5_cv_printf_ll}u])
AC_DEFINE_UNQUOTED([PRINTF_LL_WIDTH], ["$hdf5_cv_printf_ll"],
                   [Width for printf() for type `long long' or `__int64', use `ll'])


## ----------------------------------------------------------------------
## Turn on debugging by setting compiler flags
## This must come after the enable-production since it depends on production.
##
AC_MSG_CHECKING([for debug flags])
AC_ARG_ENABLE([debug],
              [AS_HELP_STRING([--enable-debug=all],
                              [Turn on debugging in all packages. One may
                               also specify a comma-separated list of
                               package names without the leading H5 or
                               the word no. The default is most packages
			       if production is disabled; no if it is enabled.
                               ])],
              [DEBUG_PKG=$enableval])

## Default to no if producton is enabled
if test "X-$DEBUG_PKG" = X- ; then
    if test "$enable_production" = yes ; then
	DEBUG_PKG=no
    else
	DEBUG_PKG=yes
    fi
fi

AC_SUBST([DEBUG_PKG])
all_packages="ac,b,b2,d,e,f,g,hg,hl,i,mf,mm,o,p,s,t,v,z"
case "X-$DEBUG_PKG" in
  X-yes)
    DEBUG_PKG="d,e,f,g,hg,i,mm,o,p,s,t,v,z"
##    H5_CPPFLAGS="$H5_CPPFLAGS -UNDEBUG"
    AC_MSG_RESULT([default ($DEBUG_PKG)])
    ;;
  X-all)
    DEBUG_PKG=$all_packages
##    H5_CPPFLAGS="$H5_CPPFLAGS -UNDEBUG"
    AC_MSG_RESULT([all ($DEBUG_PKG)])
    ;;
  X-no|X-none)
    AC_MSG_RESULT([none])
    DEBUG_PKG=
##    H5_CPPFLAGS="$H5_CPPFLAGS -DNDEBUG"
    ;;
  *)
    AC_MSG_RESULT([$DEBUG_PKG])
    ;;
esac

if test -n "$DEBUG_PKG"; then
  for pkg in `echo $DEBUG_PKG | ${TR} ${as_cr_letters}"," ${as_cr_LETTERS}" "`; do
    H5_CPPFLAGS="$H5_CPPFLAGS -DH5${pkg}_DEBUG"
  done
fi

## ----------------------------------------------------------------------
## Check if they would like the function stack support compiled in
##
AC_MSG_CHECKING([whether function stack tracking is enabled])
AC_ARG_ENABLE([codestack],
              [AS_HELP_STRING([--enable-codestack],
                              [Enable the function stack tracing (for developer debugging).])],
              [CODESTACK=$enableval])

case "X-$CODESTACK" in
  X-yes)
      CODESTACK=yes
      AC_MSG_RESULT([yes])
      AC_DEFINE([HAVE_CODESTACK], [1],
                [Define if the function stack tracing code is to be compiled in])
    ;;
  *)
      CODESTACK=no
      AC_MSG_RESULT([no])
    ;;
esac

## ----------------------------------------------------------------------
## Check if they would like the metadata trace file code compiled in
##
AC_MSG_CHECKING([whether metadata trace file code is enabled])
AC_ARG_ENABLE([metadata-trace-file],
              [AS_HELP_STRING([--enable-metadata-trace-file],
                              [Enable metadata trace file collection.])],
              [METADATATRACEFILE=$enableval])

case "X-$METADATATRACEFILE" in
  X-yes)
      METADATATRACEFILE=yes
      AC_MSG_RESULT([yes])
      AC_DEFINE([METADATA_TRACE_FILE], [1],
                [Define if the metadata trace file code is to be compiled in])
    ;;
  *)
      METADATATRACEFILE=no
      AC_MSG_RESULT([no])
    ;;
esac

## ----------------------------------------------------------------------
## Enable tracing of the API
## This must come after the enable-debug since it depends on debug.
##
AC_SUBST([TRACE_API])
AC_MSG_CHECKING([for API tracing]);
AC_ARG_ENABLE([trace],
              [AS_HELP_STRING([--enable-trace],
                              [Enable API tracing capability. Default=no
                               if debug is disabled.])],
              [TRACE=$enableval])

## Default to no if debug is disabled
if test "X-$TRACE" = X- ; then
  if test -z "$DEBUG_PKG" ; then
    TRACE=no
  else
    TRACE=yes
  fi
fi

case "X-$TRACE" in
  X-yes)
    AC_MSG_RESULT([yes])
    TRACE_API=yes
    H5_CPPFLAGS="$H5_CPPFLAGS -DH5_DEBUG_API"
    ;;
  X-no|*)
    AC_MSG_RESULT([no])
    TRACE_API=no
    H5_CPPFLAGS="$H5_CPPFLAGS -UH5_DEBUG_API"
    ;;
esac

## ----------------------------------------------------------------------
## Enable instrumenting of the library's internal operations
## This must come after the enable-debug since it depends on debug.
##
AC_SUBST([INSTRUMENT_LIBRARY])
AC_MSG_CHECKING([for instrumented library]);
AC_ARG_ENABLE([instrument],
              [AS_HELP_STRING([--enable-instrument],
                              [Enable library instrumentation of optimization
                                tracing.  Default=no if debug is disabled.])],
              [INSTRUMENT=$enableval])

## Default to no if debug is disabled
if test "X-$INSTRUMENT" = X- ; then
  if test -z "$DEBUG_PKG" ; then
    INSTRUMENT=no
  else
    INSTRUMENT=yes
  fi
fi

case "X-$INSTRUMENT" in
  X-yes)
    AC_MSG_RESULT([yes])
    INSTRUMENT_LIBRARY=yes
    AC_DEFINE([HAVE_INSTRUMENTED_LIBRARY], [1],
              [Define if library will contain instrumentation to detect correct optimization operation])
    ;;
  X-no|*)
    AC_MSG_RESULT([no])
    INSTRUMENT_LIBRARY=no
    ;;
esac

## ----------------------------------------------------------------------
## Check if they would like to securely clear file buffers before they are
##     written.
##
AC_SUBST([CLEARFILEBUF])
AC_MSG_CHECKING([whether to clear file buffers])
AC_ARG_ENABLE([clear-file-buffers],
              [AS_HELP_STRING([--enable-clear-file-buffers],
                              [Securely clear file buffers before writing
                              to file.  Default=yes.])],
              [CLEARFILEBUF=$enableval])

case "X-$CLEARFILEBUF" in
  *)
      CLEARFILEBUF=yes
      AC_MSG_RESULT([yes])
      AC_DEFINE([CLEAR_MEMORY], [1],
                [Define if the memory buffers being written to disk should be
                cleared before writing.])
    ;;
  X-no)
      CLEARFILEBUF=no
      AC_MSG_RESULT([no])
    ;;
esac

## ----------------------------------------------------------------------
## Check for dataset indexing
##
AC_MSG_CHECKING([whether to enable indexing on datasets])
AC_ARG_ENABLE([indexing],
              [AS_HELP_STRING([--enable-indexing],
                              [Enable INDEXING [default=no]])],,
              [enableval=no])
case "X-$enableval" in
  X-yes)
      INDEXING=yes
      AC_MSG_RESULT([yes])
      AC_DEFINE([HAVE_INDEXING], [1],
                [Define id indexing code should be enabled.])
    ;;
  X-no)
      INDEXING=no
      AC_MSG_RESULT([no])
    ;;
esac
AM_CONDITIONAL([BUILD_INDEXING_CONDITIONAL], [test "X-$INDEXING" = "X-yes"])

## ----------------------------------------------------------------------
## Check for ALACRITY
##
AC_ARG_WITH([alacrity],
            [AS_HELP_STRING([--with-alacrity=DIR],
                            [Use ALACRITY [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_ALACRITY="yes"
    AC_CHECK_HEADERS([alacrity.h])
    AC_CHECK_LIB([alacrity], [ALEncode],[MYALACRITY_LIBS="-lalacrity -lridcompress"], [unset HAVE_ALACRITY])
    AC_SUBST([MYALACRITY_LIBS])
    if test -z "$HAVE_ALACRITY" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find ALACRITY library])
    fi
    ;;
  no)
    HAVE_ALACRITY="no"
    AC_MSG_CHECKING([for ALACRITY library])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_ALACRITY="yes"
    case "$withval" in
      *,*)
        alacrity_inc="`echo $withval |cut -f1 -d,`"
        alacrity_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          alacrity_inc="$withval/include"
          alacrity_lib="$withval/lib"
        fi
        ;;
    esac

    ## Trying to include -I/usr/include and -L/usr/lib is redundant and
    ## can mess some compilers up.
    if test "X$alacrity_inc" = "X/usr/include"; then
      alacrity_inc=""
    fi
    if test "X$alacrity_lib" = "X/usr/lib"; then
      alacrity_lib=""
    fi

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$alacrity_inc"; then
      CPPFLAGS="$CPPFLAGS -I$alacrity_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$alacrity_inc"
    fi

    AC_CHECK_HEADERS([alacrity.h],,[CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"])

    if test -n "$alacrity_lib"; then
      LDFLAGS="$LDFLAGS -L$alacrity_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$alacrity_lib"
    fi

    AC_CHECK_LIB([alacrity], [ALEncode],, 
        [LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_ALACRITY],
        )

    if test -z "$HAVE_ALACRITY" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find ALACRITY library])
    fi

    AC_DEFINE([HAVE_ALACRITY], [1],
            [Define if ALACRITY indexing is supported.])
    ;;
esac

## ----------------------------------------------------------------------
## Check for FastBit
##
AC_ARG_WITH([fastbit],
            [AS_HELP_STRING([--with-fastbit=DIR],
                            [Use FastBit [default=no]])],,
            [withval=no])

case $withval in
  yes)
    HAVE_FASTBIT="yes"
    AC_CHECK_HEADERS([iapi.h])
    AC_CHECK_LIB([fastbit], [fastbit_selection_create],[MYFASTBIT_LIBS="-lfastbit"], [unset HAVE_FASTBIT])
    AC_SUBST([MYFASTBIT_LIBS])
    if test -z "$HAVE_FASTBIT" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find FastBit library])
    fi
    ;;
  no)
    HAVE_FASTBIT="no"
    AC_MSG_CHECKING([for FastBit library])
    AC_MSG_RESULT([suppressed])
    ;;
  *)
    HAVE_FASTBIT="yes"
    case "$withval" in
      *,*)
        fastbit_inc="`echo $withval |cut -f1 -d,`"
        fastbit_lib="`echo $withval |cut -f2 -d, -s`"
        ;;
      *)
        if test -n "$withval"; then
          fastbit_inc="$withval/include"
          fastbit_lib="$withval/lib"
        fi
        ;;
    esac

    ## Trying to include -I/usr/include and -L/usr/lib is redundant and
    ## can mess some compilers up.
    if test "X$fastbit_inc" = "X/usr/include"; then
      fastbit_inc=""
    fi
    if test "X$fastbit_lib" = "X/usr/lib"; then
      fastbit_lib=""
    fi

    saved_CPPFLAGS="$CPPFLAGS"
    saved_AM_CPPFLAGS="$AM_CPPFLAGS"
    saved_LDFLAGS="$LDFLAGS"
    saved_AM_LDFLAGS="$AM_LDFLAGS"

    if test -n "$fastbit_inc"; then
      CPPFLAGS="$CPPFLAGS -I$fastbit_inc"
      AM_CPPFLAGS="$AM_CPPFLAGS -I$fastbit_inc"
    fi

    AC_CHECK_HEADERS([iapi.h],,[CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"])

    if test -n "$fastbit_lib"; then
      LDFLAGS="$LDFLAGS -L$fastbit_lib"
      AM_LDFLAGS="$AM_LDFLAGS -L$fastbit_lib"
    fi

    AC_CHECK_LIB([fastbit], [fastbit_selection_create],, 
        [LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset HAVE_FASTBIT],
        )

    if test -z "$HAVE_FASTBIT" -a -n "$HDF5_CONFIG_ABORT"; then
      AC_MSG_ERROR([couldn't find FastBit library])
    fi

    AC_DEFINE([HAVE_FASTBIT], [1],
            [Define if FastBit indexing is supported.])
    ;;
esac

## ----------------------------------------------------------------------
## Check for python devel
##
AC_MSG_CHECKING([whether to enable the python scripting environment])
AC_ARG_ENABLE([python],
              [AS_HELP_STRING([--enable-python],
                              [Enable Python environment [default=no]])],,
              [enableval=no])
case "X-$enableval" in
  X-yes)
    AX_PYTHON
    AX_PYTHON_DEVEL
    CPPFLAGS="$CPPFLAGS $PYTHON_CPPFLAGS"
    AM_CPPFLAGS="$AM_CPPFLAGS $PYTHON_CPPFLAGS"
    LDFLAGS="$LDFLAGS $PYTHON_LDFLAGS"
    AM_LDFLAGS="$AM_LDFLAGS $PYTHON_LDFLAGS"

    AC_CHECK_HEADERS([Python.h], [AC_MSG_CHECKING([for Python support])
                     AC_TRY_COMPILE([#include <Python.h>
                                    ],
                                    [Py_Initialize(); Py_Finalize();],
                                    [AC_DEFINE([HAVE_PYTHON], [1],
                                               [Define if we have Python support])
                                       AC_MSG_RESULT([yes])
                                       PYTHON="yes"],
                                    [AC_MSG_RESULT([no])
                                       PYTHON="no"])])
    # Get NumPy header
    PYTHON_NUMPY_INCLUDE_DIR=`$PYTHON_BIN -c 'import numpy; print numpy.get_include()'`
    CPPFLAGS="$CPPFLAGS -I$PYTHON_NUMPY_INCLUDE_DIR"
    AM_CPPFLAGS="$AM_CPPFLAGS -I$PYTHON_NUMPY_INCLUDE_DIR"
    AC_CHECK_HEADERS([numpy/ndarrayobject.h], [AC_MSG_CHECKING([for Python NumPy support])
                     AC_TRY_COMPILE([#include <Python.h>
                                     #include <numpy/ndarrayobject.h>
                                    ],
                                    [Py_Initialize(); import_array(); Py_Finalize();],
                                    [AC_DEFINE([HAVE_PYTHON_NUMPY], [1],
                                               [Define if we have Python NumPy support])
                                       AC_MSG_RESULT([yes])
                                       PYTHON_NUMPY="yes"],
                                    [AC_MSG_RESULT([no])
                                       PYTHON_NUMPY="no"])],
                     [AC_MSG_ERROR([Could not find or include numpy/ndarrayobject.h])],
                                    [#include <Python.h>
                                    ])
    ;;
  X-no|*)
    AC_MSG_RESULT([no])
    ;;
esac
AM_CONDITIONAL([BUILD_PYTHON_CONDITIONAL], [test "X-$PYTHON" = "X-yes"])

## ----------------------------------------------------------------------
## Check if they would like to enable building the IOD plugin
##
AC_MSG_CHECKING([whether to enable the EFF plugins])
AC_ARG_ENABLE([eff],
              [AS_HELP_STRING([--enable-eff],
                              [Enable EFF stack [default=no]])],,
              [enableval=no])

case "X-$enableval" in
  X-yes)
    # Check mercury (--enable-parallel requires static linking)
    PKG_PROG_PKG_CONFIG
    PKG_CONFIG="$PKG_CONFIG --static"
    PKG_CHECK_MODULES(MERCURY, mercury)
    AM_CFLAGS="$AM_CFLAGS $MERCURY_CFLAGS"
    AM_CPPFLAGS="$AM_CPPFLAGS $MERCURY_CFLAGS"
    AM_LDFLAGS="$AM_LDFLAGS $MERCURY_LIBS"

    # Check mchecksum (--enable-parallel requires static linking)
    PKG_PROG_PKG_CONFIG
    PKG_CONFIG="$PKG_CONFIG --static"
    PKG_CHECK_MODULES(MCHECKSUM, mchecksum)
    AM_CFLAGS="$AM_CFLAGS $MCHECKSUM_CFLAGS"
    AM_CPPFLAGS="$AM_CPPFLAGS $MCHECKSUM_CFLAGS"
    AM_LDFLAGS="$AM_LDFLAGS $MCHECKSUM_LIBS"
    
    AC_CHECK_HEADERS([axe.h iod_api.h iod_types.h iod_corrupt_tool.h],
                     [AC_MSG_CHECKING([for EFF support])
                     AC_TRY_COMPILE([#include <axe.h>
                                     #include <iod_api.h>
                                     #include <iod_types.h>
                                     #include <stdlib.h>],
				    [AXEend_try(); iod_finalize(NULL);],
                                    [AC_DEFINE([HAVE_EFF], [1],
                                               [Define if we have EFF VOL plugins support])
                                       AC_MSG_RESULT([yes])
                                       EFF="yes"],
                                    [AC_MSG_RESULT([no])
                                       EFF="no"])])

    ;;
  X-no|*)
    AC_MSG_RESULT([no])
    ;;
esac
AM_CONDITIONAL([BUILD_EFF_CONDITIONAL], [test "X-$EFF" = "X-yes"])

## ----------------------------------------------------------------------
## Check if they would like to use a memory checking tool (like valgrind's
##     'memcheck' tool, or Rational Purify, etc) and the library should be
##     more scrupulous with it's memory operations.  Enabling this also
##     disables the library's free space manager code.
##
AC_SUBST([USINGMEMCHECKER])
AC_MSG_CHECKING([whether a memory checking tool will be used])
AC_ARG_ENABLE([using-memchecker],
              [AS_HELP_STRING([--enable-using-memchecker],
                              [Enable this option if a memory allocation and/or
                              bounds checking tool will be used on the HDF5
                              library.  Enabling this causes the library to be
                              more picky about it's memory operations and also
                              disables the library's free space manager code.
                              Default=no.])],
              [USINGMEMCHECKER=$enableval])

case "X-$USINGMEMCHECKER" in
  X-yes)
      USINGMEMCHECKER=yes
      AC_MSG_RESULT([yes])
      AC_DEFINE([USING_MEMCHECKER], [1],
                [Define if a memory checking tool will be used on the library,
                to cause library to be very picky about memory operations and
                also disable the internal free list manager code.])
    ;;
  *)
      USINGMEMCHECKER=no
      AC_MSG_RESULT([no])
    ;;
esac

## Checkpoint the cache
AC_CACHE_SAVE

## What header files and libraries do we have to look for for parallel
## support?  For the most part, search paths are already specified with
## CPPFLAGS and LDFLAGS or are known to the compiler.
##
AC_ARG_ENABLE([parallel],
              [AS_HELP_STRING([--enable-parallel],
                              [Search for MPI-IO and MPI support files])])

## The --enable-parallel flag is not compatible with --enable-cxx.
## If the user tried to specify both flags, throw an error, unless
## they also provided the --enable-unsupported flag.
if test "X${ALLOW_UNSUPPORTED}" != "Xyes"; then
  if test "X${HDF_CXX}" = "Xyes" -a "X${enable_parallel}" = "Xyes"; then
    AC_MSG_ERROR([--enable-cxx and --enable-parallel flags are incompatible. Use --enable-unsupported to override this error.])
  fi
fi

## --enable-parallel is also incompatible with --enable-threadsafe, unless
## --enable-unsupported has been specified on the configure line.
if test "X${ALLOW_UNSUPPORTED}" != "Xyes"; then
  if test "X${THREADSAFE}" = "Xyes" -a "X${enable_parallel}" = "Xyes"; then
    AC_MSG_ERROR([--enable-threadsafe and --enable-parallel flags are incompatible. Use --enable-unsupported to override this error.])
  fi
fi

AC_MSG_CHECKING([for parallel support files])
case "X-$enable_parallel" in
  X-|X-no|X-none)
    ## We are not compiling for parallel.
    AC_MSG_RESULT([skipped])
    ;;

  X-yes)
    ## We want to compile a parallel library with a compiler that
    ## may already know how to link with MPI and MPI-IO.
    AC_MSG_RESULT([provided by compiler])
    PARALLEL=yes

    ## Try link a simple MPI program.
    AC_MSG_CHECKING([whether a simple MPI-IO C program can be linked])
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <mpi.h>]],
                   [[ MPI_Init(0, (void *)0); 
		      MPI_File_open(0, (void *)0, 0, 0, (void *)0);]])], 
		   [AC_MSG_RESULT([yes])],
	  	   [AC_MSG_RESULT([no])
		    AC_MSG_ERROR([unable to link a simple MPI-IO C program])])

    if test "X$HDF_FORTRAN" = "Xyes"; then
      PAC_PROG_FC_MPI_CHECK
    fi

    ## Set RUNPARALLEL to mpiexec if not set yet.
    if test "X$PARALLEL" = "Xyes" -a -z "$RUNPARALLEL"; then
      RUNPARALLEL="mpiexec -n \$\${NPROCS:=6}"
    fi
    ;;

  *)
    AC_MSG_RESULT([error])
    AC_MSG_ERROR([\'$enable_parallel\' is not a valid parallel search type])
    ;;
esac

## ----------------------------------------------------------------------
## Print some other parallel information and do some sanity checks.
##
AC_SUBST([ADD_PARALLEL_FILES]) ADD_PARALLEL_FILES="no"

if test -n "$PARALLEL"; then
  ## The 'testpar' directory should participate in the build
  TESTPARALLEL=testpar

  ## We are building a parallel library
  AC_DEFINE([HAVE_PARALLEL], [1], [Define if we have parallel support])

  ## Display what we found about running programs
  AC_MSG_CHECKING([prefix for running on one processor])
  AC_MSG_RESULT([$RUNSERIAL])
  AC_MSG_CHECKING([prefix for running in parallel])
  AC_MSG_RESULT([$RUNPARALLEL])

  ## There *must* be some way to run in parallel even if it's just the
  ## word `none'.
  if test -z "$RUNPARALLEL"; then
    AC_MSG_ERROR([no way to run a parallel program])
  fi

  ## If RUNSERIAL or RUNPARALLEL is the word `none' then replace it with
  ## the empty string. This means that no launch commands were requested,
  ## so we will not use any launch commands.
  if test "X$RUNSERIAL" = "Xnone"; then
    RUNSERIAL=""
  fi
  if test "X$RUNPARALLEL" = "Xnone"; then
    RUNPARALLEL=""
  fi

  if test "X$HDF_FORTRAN" = "Xyes"; then
    ADD_PARALLEL_FILES="yes"
    AC_MSG_CHECKING([for MPI_Comm_c2f and MPI_Comm_f2c functions])

    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
    #include <mpi.h>
    ]],
      [[MPI_Comm c_comm; MPI_Comm_c2f(c_comm)]])],
      [AC_DEFINE([HAVE_MPI_MULTI_LANG_Comm], [1],
                 [Define if MPI_Comm_c2f and MPI_Comm_f2c exist])
                 AC_MSG_RESULT([yes])],
                 [AC_MSG_RESULT([no])]
    )

    AC_MSG_CHECKING([for MPI_Info_c2f and MPI_Info_f2c functions])
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <mpi.h>]],
      [[MPI_Info c_info; MPI_Info_c2f(c_info)]])],
      [AC_DEFINE([HAVE_MPI_MULTI_LANG_Info], [1],
                [Define if MPI_Info_c2f and MPI_Info_f2c exist])
                AC_MSG_RESULT([yes])],
                [AC_MSG_RESULT([no])]
    )
  fi

  ## --------------------------------------------------------------------
  ## Do we want MPE instrumentation feature on?
  ##
  ## This must be done after enable-parallel is checked since it depends
  ## on a mpich compiler.
  ##
  MPE=yes
  AC_ARG_WITH([mpe],
              [AS_HELP_STRING([--with-mpe=DIR],
                              [Use MPE instrumentation [default=no]])],,
              [withval=no])

  case "X-$withval" in
    X-|X-no|X-none)
      AC_MSG_CHECKING([for MPE])
      AC_MSG_RESULT([suppressed])
      unset MPE
      ;;
    X-yes)
      AC_CHECK_HEADERS([mpe.h],, [unset MPE])
      AC_CHECK_LIB([mpe], [MPE_Init_log],, [unset MPE])
      ;;
    *)
      case "$withval" in
        *,*)
          mpe_inc="`echo $withval | cut -f1 -d,`"
          mpe_lib="`echo $withval | cut -f2 -d, -s`"
          ;;
        *)
          if test -n "$withval"; then
            mpe_inc="$withval/include"
            mpe_lib="$withval/lib"
          fi
          ;;
      esac

      if test -n "$mpe_inc"; then
        saved_CPPFLAGS="$CPPFLAGS"
        saved_AM_CPPFLAGS="$AM_CPPFLAGS"
        CPPFLAGS="$CPPFLAGS -I$mpe_inc"
        AM_CPPFLAGS="$AM_CPPFLAGS -I$mpe_inc"
        AC_CHECK_HEADERS([mpe.h],, [CPPFLAGS="$saved_CPPFLAGS"; AM_CPPFLAGS="$saved_AM_CPPFLAGS"; unset MPE])
      else
        AC_CHECK_HEADERS([mpe.h],, [unset MPE])
      fi

      if test -n "$mpe_lib"; then
        saved_LDFLAGS="$LDFLAGS"
        saved_AM_LDFLAGS="$AM_LDFLAGS"
        LDFLAGS="$LDFLAGS -L$mpe_lib"
        AM_LDFLAGS="$AM_LDFLAGS -L$mpe_lib"
        AC_CHECK_LIB([mpe], [MPE_Init_log],,
                     [LDFLAGS="$saved_LDFLAGS"; AM_LDFLAGS="$saved_AM_LDFLAGS"; unset MPE])
      else
        AC_CHECK_LIB([mpe], [MPE_Init_log],, [unset MPE])
      fi
      ;;
  esac

  if test "X-$MPE" = "X-yes"; then
    AC_DEFINE([HAVE_MPE], [1], [Define if we have MPE support])
  fi
fi

## ----------------------------------------------------------------------
## Check if Direct I/O driver is enabled by --enable-direct-vfd
##
## ----------------------------------------------------------------------
## Check if Direct I/O driver is enabled by --enable-direct-vfd
##
AC_CACHE_VAL([hdf5_cv_direct_io],
    AC_CHECK_DECL([O_DIRECT], [hdf5_cv_direct_io=yes], [hdf5_cv_direct_io=no], [[#include <fcntl.h>]]))
AC_CACHE_VAL([hdf5_cv_posix_memalign],
    AC_CHECK_FUNC([posix_memalign], [hdf5_cv_posix_memalign=yes], [hdf5_cv_posix_memalign=no]))

AC_MSG_CHECKING([if the direct I/O virtual file driver (VFD) is enabled])

AC_ARG_ENABLE([direct-vfd],
              [AS_HELP_STRING([--enable-direct-vfd],
                              [Build the direct I/O virtual file driver (VFD).
                               This is based on the POSIX (sec2) VFD and
                               requires the open() call to take the O_DIRECT
                               flag. [default=no]])],
              [DIRECT_VFD=$enableval], [DIRECT_VFD=no])

if test "X$DIRECT_VFD" = "Xyes"; then
    if test ${hdf5_cv_direct_io} = "yes" && test ${hdf5_cv_posix_memalign} = "yes" ; then
        AC_MSG_RESULT([yes])
        AC_DEFINE([HAVE_DIRECT], [1],
                [Define if the direct I/O virtual file driver (VFD) should be compiled])
    else
        AC_MSG_RESULT([no])
        DIRECT_VFD=no
        AC_MSG_ERROR([The direct VFD was requested but cannot be built. This is either
                     due to O_DIRECT not being found in fcntl.h or a lack of
                     posix_memalign() on your system. Please re-configure without
                     specifying --enable-direct-vfd.])
    fi
else
    AC_MSG_RESULT([no])
fi

AM_CONDITIONAL([DIRECT_VFD_CONDITIONAL], [test "X$DIRECT_VFD" = "Xyes"])

## ----------------------------------------------------------------------
## Enable custom plugin default path for library.  It requires SHARED support.
##
AC_MSG_CHECKING([for custom plugin default path definition])
AC_ARG_WITH([default-plugindir],
            [AS_HELP_STRING([--with-default-plugindir=location],
                            [Specify default location for plugins
                            [default="/usr/local/hdf5/lib/plugin"]])],,
            withval="/usr/local/hdf5/lib/plugin")

if test "X$withval" = "X"; then
    AC_MSG_RESULT([default])
    default_plugindir="/usr/local/hdf5/lib/plugin"
else
    AC_MSG_RESULT([$withval])
    default_plugindir=$withval
fi

AC_DEFINE_UNQUOTED([DEFAULT_PLUGINDIR], ["$default_plugindir"],
            [Define the default plugins path to compile])

## ----------------------------------------------------------------------
## Decide whether the presence of user's exception handling functions is
## checked and data conversion exceptions are returned.  This is mainly
## for the speed optimization of hard conversions.  Soft conversions can
## actually benefit little.
##
AC_MSG_CHECKING([whether exception handling functions is checked during data conversions])
AC_ARG_ENABLE([dconv-exception],
              [AS_HELP_STRING([--enable-dconv-exception],
                              [if exception handling functions is checked during
                              data conversions [default=yes]])],
              [DCONV_EXCEPTION=$enableval], [DCONV_EXCEPTION=yes])

if test "$DCONV_EXCEPTION" = "yes"; then
  AC_MSG_RESULT([yes])
  AC_DEFINE([WANT_DCONV_EXCEPTION], [1],
            [Check exception handling functions during data conversions])
else
  AC_MSG_RESULT([no])
fi

## ----------------------------------------------------------------------
## Decide whether the data accuracy has higher priority during data
## conversions.  If not, some hard conversions will still be prefered even
## though the data may be wrong (for example, some compilers don't 
## support denormalized floating values) to maximize speed.
## 
AC_MSG_CHECKING([whether data accuracy is guaranteed during data conversions])
AC_ARG_ENABLE([dconv-accuracy],
              [AS_HELP_STRING([--enable-dconv-accuracy],
                              [if data accuracy is guaranteed during 
                              data conversions [default=yes]])],
              [DATA_ACCURACY=$enableval], [DATA_ACCURACY=yes])

if test "$DATA_ACCURACY" = "yes"; then
  AC_MSG_RESULT([yes])
  AC_DEFINE([WANT_DATA_ACCURACY], [1],
            [Data accuracy is prefered to speed during data conversions])
else
  AC_MSG_RESULT([no])
fi

## ----------------------------------------------------------------------
## Set the flag to indicate that the machine has window style pathname,
## that is, "drive-letter:\" (e.g. "C:") or "drive-letter:/" (e.g. "C:/").
## (This flag should be _unset_ for all machines, except for Windows, where
## it's set in the custom Windows H5pubconf.h file)
##
AC_MSG_CHECKING([if the machine has window style path name])

case "`uname`" in
  MINGW*)
    AC_DEFINE([HAVE_WINDOW_PATH], [1],
              [Define if your system has window style path name.])
    AC_MSG_RESULT([yes])
    ;;
  *)
    AC_MSG_RESULT([no])
    ;;
esac

## ----------------------------------------------------------------------
## Set the flag to indicate that the machine is using a special algorithm to convert
## 'long double' to '(unsigned) long' values.  (This flag should only be set for
## the IBM Power6 Linux.  When the bit sequence of long double is
## 0x4351ccf385ebc8a0bfcc2a3c3d855620, the converted value of (unsigned)long
## is 0x004733ce17af227f, not the same as the library's conversion to 0x004733ce17af2282.
## The machine's conversion gets the correct value.  We define the macro and disable
## this kind of test until we figure out what algorithm they use.
##
AC_MSG_CHECKING([if using special algorithm to convert long double to (unsigned) long values])

if test ${ac_cv_sizeof_long_double} = 0; then
   hdf5_cv_ldouble_to_long_special=${hdf5_cv_ldouble_to_long_special=no}
else
   AC_CACHE_VAL([hdf5_cv_ldouble_to_long_special],
        [AC_RUN_IFELSE(
            [AC_LANG_PROGRAM([
                #include <string.h>
            ],[[
                long double         ld = 20041683600089727.779961L;
                long                ll;
                unsigned long       ull;
                unsigned char       s[16];
                unsigned char       s2[8];
                int                 ret = 1;

                if(sizeof(long double) == 16 && sizeof(long) == 8) {
                    /*make sure the long double type has 16 bytes in size and
                     * 11 bits of exponent.  If it is,
                     *the bit sequence should be like below.  It's not
                     *a decent way to check but this info isn't available. */
                    memcpy(s, &ld, 16);
                    if(s[0]==0x43 && s[1]==0x51 && s[2]==0xcc && s[3]==0xf3 &&
                        s[4]==0x85 && s[5]==0xeb && s[6]==0xc8 && s[7]==0xa0 &&
                        s[8]==0xbf && s[9]==0xcc && s[10]==0x2a && s[11]==0x3c) {

                        /* Assign the hexadecimal value of long double type. */
                        s[0]=0x43; s[1]=0x51; s[2]=0xcc; s[3]=0xf3;
                        s[4]=0x85; s[5]=0xeb; s[6]=0xc8; s[7]=0xa0;
                        s[8]=0xbf; s[9]=0xcc; s[10]=0x2a; s[11]=0x3c;
                        s[12]=0x3d; s[13]=0x85; s[14]=0x56; s[15]=0x20;

                        memcpy(&ld, s, 16);

                        ll = (long)ld;
                        memcpy(s2, &ll, 8);

                        /* The library's algorithm converts it to 0x 00 47 33 ce 17 af 22 82
                         * and gets wrong value 20041683600089730 on the IBM Power6 Linux.
                         * But the IBM Power6 Linux converts it to 0x00 47 33 ce 17 af 22 7f
                         * and gets the correct value 20041683600089727.  It uses some special
                         * algorithm.  We're going to define the macro and skip the test until
                         * we can figure out how they do it. */
                        if(s2[0]==0x00 && s2[1]==0x47 && s2[2]==0x33 && s2[3]==0xce &&
                           s2[4]==0x17 && s2[5]==0xaf && s2[6]==0x22 && s2[7]==0x7f)
                            ret = 0;

                        ull = (unsigned long)ld;
                        memcpy(s2, &ull, 8);

                        /* The unsigned long is the same as signed long. */
                        if(s2[0]==0x00 && s2[1]==0x47 && s2[2]==0x33 && s2[3]==0xce &&
                           s2[4]==0x17 && s2[5]==0xaf && s2[6]==0x22 && s2[7]==0x7f)
                            ret = 0;
                    }
                }
                exit(ret);
        ]])]
    , [hdf5_cv_ldouble_to_long_special=yes], [hdf5_cv_ldouble_to_long_special=no],)])
fi

if test ${hdf5_cv_ldouble_to_long_special} = "yes"; then
  AC_DEFINE([LDOUBLE_TO_LONG_SPECIAL], [1],
            [Define if your system converts long double to (unsigned) long values with special algorithm.])
  AC_MSG_RESULT([yes])
else
  AC_MSG_RESULT([no])
fi

## ----------------------------------------------------------------------
## Set the flag to indicate that the machine is using a special algorithm
## to convert some values of '(unsigned) long' to 'long double' values.
## (This flag should be off for all machines, except for IBM Power6 Linux,
## when the bit sequences are 003fff..., 007fff..., 00ffff..., 01ffff...,
## ..., 7fffff..., the compiler uses a unknown algorithm.  We define a
## macro and skip the test for now until we know about the algorithm.
##
AC_MSG_CHECKING([if using special algorithm to convert (unsigned) long to long double values])

if test ${ac_cv_sizeof_long_double} = 0; then
   hdf5_cv_long_to_ldouble_special=${hdf5_cv_long_to_ldouble_special=no}
else
   AC_CACHE_VAL([hdf5_cv_long_to_ldouble_special],
        [AC_RUN_IFELSE(
            [AC_LANG_PROGRAM([
                #include <string.h>
            ],[[
                long double         ld;
                long                ll;
                unsigned long       ull;
                unsigned char       s[16];
                int                 flag=0, ret=1;

                /*Determine if long double has 16 byte in size, 11 bit exponent, and
                 *the bias is 0x3ff */
                if(sizeof(long double) == 16) {
                    ld = 1.0L;
                    memcpy(s, &ld, 16);
                    if(s[0]==0x3f && s[1]==0xf0 && s[2]==0x00 && s[3]==0x00 &&
                        s[4]==0x00 && s[5]==0x00 && s[6]==0x00 && s[7]==0x00)
                        flag = 1;
                }

                if(flag==1 && sizeof(long)==8) {
                    ll = 0x003fffffffffffffL;
                    ld = (long double)ll;
                    memcpy(s, &ld, 16);
                    /* The library converts the value to 0x434fffffffffffff8000000000000000.
                     * In decimal it is 18014398509481982.000000, one value short of the original.
                     * The IBM Power6 Linux converts it to 0x4350000000000000bff0000000000000.
                     * The value is correct in decimal. It uses some special
                     * algorithm.  We're going to define the macro and skip the test until
                     * we can figure out how they do it. */
                    if(s[0]==0x43 && s[1]==0x50 && s[2]==0x00 && s[3]==0x00 &&
                        s[4]==0x00 && s[5]==0x00 && s[6]==0x00 && s[7]==0x00 &&
                        s[8]==0xbf && s[9]==0xf0 && s[10]==0x00 && s[11]==0x00 &&
                        s[12]==0x00 && s[13]==0x00 && s[14]==0x00 && s[15]==0x00)
                        ret = 0;
                }
                if(flag==1 && sizeof(unsigned long)==8) {
                    ull = 0xffffffffffffffffUL;
                    ld = (long double)ull;
                    memcpy(s, &ld, 16);
                    /* Use a different value from signed long to test. The problem is the same
                     * for both long and unsigned long. The value is 18446744073709551615.
                     * The library converts the value to 0x43effffffffffffffe000000000000000.
                     * In decimal it's 18446744073709548544.000000, very different from the original.
                     * The IBM Power6 Linux converts it to 0x43f0000000000000bff0000000000000.
                     * The value is correct in decimal. It uses some special
                     * algorithm.  We're going to define the macro and skip the test until
                     * we can figure out how they do it. */
                    if(s[0]==0x43 && s[1]==0xf0 && s[2]==0x00 && s[3]==0x00 &&
                        s[4]==0x00 && s[5]==0x00 && s[6]==0x00 && s[7]==0x00 &&
                        s[8]==0xbf && s[9]==0xf0 && s[10]==0x00 && s[11]==0x00 &&
                        s[12]==0x00 && s[13]==0x00 && s[14]==0x00 && s[15]==0x00)
                        ret = 0;
                }
                exit(ret);
        ]])]
    , [hdf5_cv_long_to_ldouble_special=yes], [hdf5_cv_long_to_ldouble_special=no],)])
fi

if test ${hdf5_cv_long_to_ldouble_special} = "yes"; then
  AC_DEFINE([LONG_TO_LDOUBLE_SPECIAL], [1],
            [Define if your system can convert (unsigned) long to long double values with special algorithm.])
  AC_MSG_RESULT([yes])
else
  AC_MSG_RESULT([no])
fi

## ----------------------------------------------------------------------
## Set the flag to indicate that the machine can accurately convert
## 'long double' to '(unsigned) long long' values.  (This flag should
## be set for all machines, except for Mac OS 10.4, SGI IRIX64 6.5 and
## Powerpc Linux using XL compilers.
## When the bit sequence of long double is 0x4351ccf385ebc8a0bfcc2a3c...,
## the values of (unsigned)long long start to go wrong on these
## two machines.  Adjusting it higher to 0x4351ccf385ebc8a0dfcc... or
## 0x4351ccf385ebc8a0ffcc... will make the converted values wildly wrong.
## This test detects this wrong behavior and disable the test.
##
AC_MSG_CHECKING([if correctly converting long double to (unsigned) long long values])

if test ${ac_cv_sizeof_long_double} = 0; then
   hdf5_cv_ldouble_to_llong_accurate=${hdf5_cv_ldouble_to_llong_accurate=no}
else
   AC_CACHE_VAL([hdf5_cv_ldouble_to_llong_accurate],
        [AC_RUN_IFELSE([AC_LANG_SOURCE([[
        int main(void)
        {
            long double         ld = 20041683600089727.779961L;
            long long           ll;
            unsigned long long  ull;
            unsigned char       s[16];
            int                 ret = 0;
            
            if(sizeof(long double) == 16) {
                /*make sure the long double type is the same as the failing type 
                 *which has 16 bytes in size and 11 bits of exponent.  If it is,
                 *the bit sequence should be like below.  It's not 
                 *a decent way to check but this info isn't available. */   
                memcpy(s, &ld, 16);
                if(s[0]==0x43 && s[1]==0x51 && s[2]==0xcc && s[3]==0xf3 &&
                    s[4]==0x85 && s[5]==0xeb && s[6]==0xc8 && s[7]==0xa0 &&
                    s[8]==0xbf && s[9]==0xcc && s[10]==0x2a && s[11]==0x3c) {

                    /*slightly adjust the bit sequence (s[8]=0xdf).  The converted
                     *values will go wild on Mac OS 10.4 and IRIX64 6.5.*/ 
                    s[0]=0x43; s[1]=0x51; s[2]=0xcc; s[3]=0xf3;
                    s[4]=0x85; s[5]=0xeb; s[6]=0xc8; s[7]=0xa0;
                    s[8]=0xdf; s[9]=0xcc; s[10]=0x2a; s[11]=0x3c;
                    s[12]=0x3d; s[13]=0x85; s[14]=0x56; s[15]=0x20;

                    memcpy(&ld, s, 16);
                    ll = (long long)ld;
                    ull = (unsigned long long)ld;
                    
                    if(ll != 20041683600089728 || ull != 20041683600089728)
                        ret = 1;
                }    
            }    
    done:
            exit(ret);
        }
        ]])], [hdf5_cv_ldouble_to_llong_accurate=yes], [hdf5_cv_ldouble_to_llong_accurate=no],[])])
fi

if test ${hdf5_cv_ldouble_to_llong_accurate} = "yes"; then
  AC_DEFINE([LDOUBLE_TO_LLONG_ACCURATE], [1],
            [Define if your system can convert long double to (unsigned) long long values correctly.])
  AC_MSG_RESULT([yes])
else
  AC_MSG_RESULT([no])
fi


## ----------------------------------------------------------------------
## Set the flag to indicate that the machine can accurately convert
## '(unsigned) long long' to 'long double' values.  (This flag should be
## set for all machines, except for Mac OS 10.4 and Powerpc Linux using
## XL compilers.
## When the bit sequences are 003fff..., 007fff..., 00ffff..., 01ffff...,
## ..., 7fffff..., the converted values are twice as big as they should be.
##
AC_MSG_CHECKING([if correctly converting (unsigned) long long to long double values])

if test ${ac_cv_sizeof_long_double} = 0; then
   hdf5_cv_llong_to_ldouble_correct=${hdf5_cv_llong_to_ldouble_correct=no}
else
   AC_CACHE_VAL([hdf5_cv_llong_to_ldouble_correct],
        [AC_RUN_IFELSE([AC_LANG_SOURCE([[
        int main(void)
        {
            long double         ld;
            long long           ll;
            unsigned long long  ull;
            unsigned char       s[16];
            int                 flag=0, ret=0;
        
            /*Determine if long double has 16 byte in size, 11 bit exponent, and
             *the bias is 0x3ff */ 
            if(sizeof(long double) == 16) { 
                ld = 1.0L;
                memcpy(s, &ld, 16);
                if(s[0]==0x3f && s[1]==0xf0 && s[2]==0x00 && s[3]==0x00 &&
                    s[4]==0x00 && s[5]==0x00 && s[6]==0x00 && s[7]==0x00) 
                    flag = 1; 
            }
             
            if(flag==1 && sizeof(long long)==8) {
                ll = 0x01ffffffffffffffLL;
                ld = (long double)ll;
                memcpy(s, &ld, 16);
                /*Check if the bit sequence is as supposed to be*/
                if(s[0]!=0x43 || s[1]!=0x7f || s[2]!=0xff || s[3]!=0xff ||
                    s[4]!=0xff || s[5]!=0xff || s[6]!=0xff || s[7]!=0xff ||
                    s[8]!=0xf0 || s[9]!=0x00 || s[10]!=0x00 || s[11]!=0x00)
                    ret = 1;
            }        
            if(flag==1 && sizeof(unsigned long long)==8) {
                ull = 0x01ffffffffffffffULL;
                ld = (long double)ull;
                memcpy(s, &ld, 16);
                if(s[0]!=0x43 || s[1]!=0x7f || s[2]!=0xff || s[3]!=0xff ||
                    s[4]!=0xff || s[5]!=0xff || s[6]!=0xff || s[7]!=0xff ||
                    s[8]!=0xf0 || s[9]!=0x00 || s[10]!=0x00 || s[11]!=0x00)
                    ret = 1;
            }        
    done:
            exit(ret);
        }
        ]])],[hdf5_cv_llong_to_ldouble_correct=yes], [hdf5_cv_llong_to_ldouble_correct=no],[])]) 
fi

if test ${hdf5_cv_llong_to_ldouble_correct} = "yes"; then
  AC_DEFINE([LLONG_TO_LDOUBLE_CORRECT], [1],
            [Define if your system can convert (unsigned) long long to long double values correctly.])
  AC_MSG_RESULT([yes])
else
  AC_MSG_RESULT([no])
fi

## ----------------------------------------------------------------------
## Set some variables for general configuration information to be saved
## and installed with the libraries (used to generate libhdf5.settings).
##

## HDF5 version from the first line of the README.txt file.
H5_VERSION="`cut -d' ' -f3 $srcdir/README.txt | head -1`"
AC_SUBST([H5_VERSION])

## Configuration date
AC_SUBST([CONFIG_DATE]) CONFIG_DATE="`date`"

## User doing the configuration
AC_SUBST([CONFIG_USER]) CONFIG_USER="`whoami`@`hostname`"
if test -n "$ORGANIZATION"; then
  CONFIG_USER="$CONFIG_USER at $ORGANIZATION"
fi

## Configuration mode (production, development, profile, etc) saved above.
AC_SUBST([CONFIG_MODE])

## Byte sex from the AC_C_BIGENDIAN macro.
AC_SUBST([BYTESEX])
if test "X$ac_cv_c_bigendian" = "Xyes"; then
  BYTESEX="big-endian"
else
  BYTESEX="little-endian"
fi


if test "X$ac_cv_c_bigendian" = "Xyes"; then
  WORDS_BIGENDIAN="yes"
else
  WORDS_BIGENDIAN="no"
fi
AC_SUBST([WORDS_BIGENDIAN])

## Parallel support? (set above except empty if none)
PARALLEL=${PARALLEL:-no}

## Compiler with version information. This consists of the full path
## name of the compiler and the reported version number.
AC_SUBST([CC_VERSION])
## Strip anything that looks like a flag off of $CC
CC_NOFLAGS=`echo $CC | sed 's/ -.*//'`

if `echo $CC_NOFLAGS | grep ^/ >/dev/null 2>&1`; then
  CC_VERSION="$CC"
else
  CC_VERSION="$CC";
  for x in `echo $PATH | sed -e 's/:/ /g'`; do
    if test -x $x/$CC_NOFLAGS; then
      CC_VERSION="$x/$CC"
      break
    fi
  done
fi
if test -n "$cc_version_info"; then
  CC_VERSION="$CC_VERSION ( $cc_version_info)"
fi

AC_SUBST([FC_VERSION])
## Strip anything that looks like a flag off of $FC
FC_NOFLAGS=`echo $FC | sed 's/ -.*//'`

if `echo $FC_NOFLAGS | grep ^/ >/dev/null 2>&1`; then
  FC_VERSION="$FC"
else
  FC_VERSION="$FC";
  for x in `echo $PATH | sed -e 's/:/ /g'`; do
    if test -x $x/$FC_NOFLAGS; then
      FC_VERSION="$x/$FC"
      break
    fi
  done
fi
if test -n "$fc_version_info"; then
  FC_VERSION="$FC_VERSION ( $fc_version_info)"
fi

AC_SUBST([CXX_VERSION])
## Strip anything that looks like a flag off of $CXX
CXX_NOFLAGS=`echo $CXX | sed 's/ -.*//'`

if `echo $CXX_NOFLAGS | grep ^/ >/dev/null 2>&1`; then
  CXX_VERSION="$CXX"
else
  CXX_VERSION="$FC";
  for x in `echo $PATH | sed -e 's/:/ /g'`; do
    if test -x $x/$CXX_NOFLAGS; then
      CXX_VERSION="$x/$CXX"
      break
    fi
  done
fi
if test -n "$cxx_version_info"; then
  CXX_VERSION="$CXX_VERSION ( $cxx_version_info)"
fi

## ----------------------------------------------------------------------
## Where is the root of the source tree. Give an absolute address so
## we can find it no matter which directory of the distribution is our
## current directory. The built-in pwd fails on some systems, but the
## /bin/pwd version works OK.
##
if test -x /bin/pwd; then
  pwd=/bin/pwd
else
  pwd=pwd
fi
AC_SUBST([ROOT]) ROOT="`$pwd`"

## ----------------------------------------------------------------------
## Some programs shouldn't be built by default (e.g., programs to generate
## data files used by tests, some optional tests).
## Check if they want such programs built anyway.
##
AC_MSG_CHECKING([additional programs should be built])
AC_ARG_ENABLE([build-all],
     [AS_HELP_STRING([--enable-build-all],
                     [Build helper programs that only developers should need [default=no]])],
     [BUILD_ALL=$enableval],
     [BUILD_ALL=no])

if test "X$BUILD_ALL" = "Xyes"; then
 echo "yes"
else
 echo "no"
fi
AM_CONDITIONAL([BUILD_ALL_CONDITIONAL], [test "X$BUILD_ALL" = "Xyes"])

## ----------------------------------------------------------------------
## Enable deprecated public API symbols
##
AC_SUBST([DEPRECATED_SYMBOLS])
AC_MSG_CHECKING([if deprecated public symbols are available]);
AC_ARG_ENABLE([deprecated-symbols],
              [AS_HELP_STRING([--enable-deprecated-symbols],
                     [Enable deprecated public API symbols [default=yes]])],
             [DEPREC_SYMBOLS=$enableval],
             [DEPREC_SYMBOLS=yes])

case "X-$DEPREC_SYMBOLS" in
  X-yes)
    AC_MSG_RESULT([yes])
    DEPRECATED_SYMBOLS=yes
    ;;
  X-no|*)
    AC_MSG_RESULT([no])
    DEPRECATED_SYMBOLS=no
    AC_DEFINE([NO_DEPRECATED_SYMBOLS], [1],
              [Define if deprecated public API symbols are disabled])
    ;;
esac

## --------------------------------------------------------------------------
## Which version of the public APIs should the 'base' versioned symbols use?
##

AC_SUBST([DEFAULT_API_VERSION])
AC_MSG_CHECKING([which version of public symbols to use by default])
AC_ARG_WITH([default-api-version],
            [AS_HELP_STRING([--with-default-api-version=(v16|v18|v110)],
                            [Specify default release version of public symbols
                             [default=v110]])],,
            [withval=v110])

if test "X$withval" = "Xv16"; then
    AC_MSG_RESULT([v16])
    DEFAULT_API_VERSION=v16
    AC_DEFINE([USE_16_API_DEFAULT], [1],
              [Define using v1.6 public API symbols by default])
elif test "X$withval" = "Xv18"; then
    AC_MSG_RESULT([v18])
    DEFAULT_API_VERSION=v18
elif test "X$withval" = "Xv110"; then
    AC_MSG_RESULT([v110])
    DEFAULT_API_VERSION=v110
else
    AC_MSG_ERROR([invalid version of public symbols given])
fi

## It's an error to try to disable deprecated public API symbols while
## choosing an older version of the public API as the default. However,
## if the user insists on doing this via the --enable-unsupported configure
## flag, we'll let them.
if test "X${ALLOW_UNSUPPORTED}" != "Xyes"; then
  if test "X${DEFAULT_API_VERSION}" != "Xv110" -a "X${DEPRECATED_SYMBOLS}" = "Xno" ; then
    AC_MSG_ERROR([Removing old public API symbols not allowed when using them as default public API symbols. Use --enable-unsupported to override this error.])
  fi
fi

## ----------------------------------------------------------------------
## Enable strict file format checks
##
AC_SUBST([STRICT_FORMAT_CHECKS])
AC_MSG_CHECKING([whether to perform strict file format checks]);
AC_ARG_ENABLE([strict-format-checks],
              [AS_HELP_STRING([--enable-strict-format-checks],
                     [Enable strict file format checks, default=yes if
                        debug flag is enabled, no otherwise])],
             [STRICT_CHECKS=$enableval])

## Default to yes if debug is enabled
if test "X-$STRICT_CHECKS" = X- ; then
  if test -z "$DEBUG_PKG" ; then
    STRICT_CHECKS=no
  else
    STRICT_CHECKS=yes
  fi
fi

case "X-$STRICT_CHECKS" in
  X-yes)
    AC_MSG_RESULT([yes])
    STRICT_FORMAT_CHECKS=yes
    AC_DEFINE([STRICT_FORMAT_CHECKS], [1],
              [Define if strict file format checks are enabled])
    ;;
  X-no|*)
    AC_MSG_RESULT([no])
    STRICT_FORMAT_CHECKS=no
    ;;
esac


## ----------------------------------------------------------------------
## Enable embedded library information
##
AC_MSG_CHECKING([whether to have library information embedded in the executables])
AC_ARG_ENABLE([embedded-libinfo],
    [AS_HELP_STRING([--enable-embedded-libinfo],
	[Enable embedded library information [default=yes]])],
	[enable_embedded_libinfo=$enableval],
	[enable_embedded_libinfo=yes])

   if test "${enable_embedded_libinfo}" = "yes"; then
      AC_MSG_RESULT([yes])
      AC_DEFINE([HAVE_EMBEDDED_LIBINFO], [1],
                [Define if library information should be embedded in the executables])
   else
      AC_MSG_RESULT([no])
    fi


## ----------------------------------------------------------------------
## Check if pointer alignments are enforced
##
AC_MSG_CHECKING([if alignment restrictions are strictly enforced])
AC_RUN_IFELSE([
    AC_LANG_PROGRAM([
        #include <stdlib.h>
        #include <string.h>

        typedef struct {
            size_t len;
            void *p;
        } hvl_t;
        ], [
        char *chp = "beefs";
        char **chpp = malloc (2 * sizeof (char *));
        char **chpp2;
        hvl_t vl = { 12345, (void *) chp };
        hvl_t *vlp;
        hvl_t *vlp2;

        memcpy ((void *) ((char *) chpp + 1), &chp, sizeof (char *));
        chpp2 = (char **) ((char *) chpp + 1);
        if (strcmp (*chpp2, chp)) {
            free (chpp);
            return 1;
        }
        free (chpp);

        vlp = malloc (2 * sizeof (hvl_t));
        memcpy ((void *) ((char *) vlp + 1), &vl, sizeof (hvl_t));
        vlp2 = (hvl_t *) ((char *) vlp + 1);
        if (vlp2->len != vl.len || vlp2->p != vl.p) {
            free (vlp);
            return 1;
        }
        free (vlp);
    ])
    ], [
    AC_DEFINE([NO_ALIGNMENT_RESTRICTIONS], [1], [Define if we can violate pointer alignment restrictions])
    AC_MSG_RESULT([no])
    ], [
    AC_MSG_RESULT([yes])
    ], [
    AC_MSG_RESULT([unknown, assuming yes])
    ])


## ----------------------------------------------------------------------
## Restore user's CFLAGS.
CFLAGS="$saved_user_CFLAGS"
FCFLAGS="$saved_user_FCFLAGS"
CXXFLAGS="$saved_user_CXXFLAGS"
CPPFLAGS="$saved_user_CPPFLAGS"
LDFLAGS="$saved_user_LDFLAGS"


## ----------------------------------------------------------------------
## Create automake conditionals to tell automake makefiles which directories
## need to be compiled

AM_CONDITIONAL([BUILD_CXX_CONDITIONAL], [test "X$HDF_CXX" = "Xyes"])
AM_CONDITIONAL([BUILD_PARALLEL_CONDITIONAL], [test -n "$TESTPARALLEL"])
AM_CONDITIONAL([BUILD_FORTRAN_CONDITIONAL], [test "X$HDF_FORTRAN" = "Xyes"])
AM_CONDITIONAL([BUILD_HDF5_HL_CONDITIONAL], [test "X$HDF5_HL" = "Xyes"])


## ----------------------------------------------------------------------
## Build the Makefiles.
##

## The directory search list
AC_SUBST([SEARCH]) SEARCH='$(srcdir) $(top_builddir)/src $(top_srcdir)/src'
export SEARCH

## Some cleanup stuff
rm -f conftest conftest.o conftest.c dummy.o *.mod

## Build config.status, touch the stamp files, and build all the Makefiles.
## The order is such that the first `make' does not need to update any
## configuration information. See config/commence.in for the order in which
## things need to be done.

## First the stamp1 file for H5config.h.in
mkdir ./config >/dev/null 2>&1
touch ./config/stamp1

## Then the config.status file (but not makefiles)
saved_no_create=$no_create
no_create=yes

PARALLEL_MAKE=""
FORTRAN_PARALLEL_MAKE=""

if test -n "$TESTPARALLEL"; then
  PARALLEL_MAKE="$TESTPARALLEL/Makefile"

  if test "X$HDF_FORTRAN" = "Xyes"; then
    FORTRAN_PARALLEL_MAKE=fortran/$TESTPARALLEL/Makefile
  fi
fi
LT_OUTPUT
no_create=$saved_no_create

## Then the stamp2 file for H5config.h
touch ./config/stamp2

## Finally the makefiles
test "$no_create" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1

## Are we compiling static libraries, shared libraries, or both?  This
## is only used for the libhdf5.settings file. We can't just look at
## $enable_static and $enable_shared because if they're yes the ltconfig
## might have decided that one or the other is simply not possible.
## Therefore we have to ask the generated `libtool' shell script
## which 'features' it has enabled.
if (./libtool --features | grep '^enable shared libraries' > /dev/null); then
  enable_shared=yes
else
  enable_shared=no
fi

if (./libtool --features | grep '^enable static libraries' > /dev/null); then
  enable_static=yes
else
  enable_static=no
fi

if test "X$enable_static" = "Xyes" && test "X$enable_shared" = "Xyes"; then
  STATIC_SHARED="static, shared"
elif test "X$enable_static" = "Xyes"; then
  STATIC_SHARED="static"
elif test "X$enable_shared" = "Xyes"; then
  STATIC_SHARED="shared"
else
  STATIC_SHARED="none"
fi

## ----------------------------------------------------------------------
## Set a macro if shared library is enabled.
##
AM_CONDITIONAL([HAVE_SHARED_CONDITIONAL], [test "X$enable_shared" = "Xyes"])

AC_CONFIG_FILES([src/libhdf5.settings
                 Makefile
                 src/Makefile
                 test/Makefile
                 test/testcheck_version.sh
                 test/testerror.sh
                 test/H5srcdir_str.h
                 test/testlibinfo.sh
                 test/testlinks_env.sh
                 test/test_plugin.sh
                 test/test_vol_plugin.sh
                 testpar/Makefile
                 tools/Makefile
                 tools/h5dump/Makefile
                 tools/h5dump/testh5dump.sh
                 tools/h5dump/testh5dumppbits.sh
                 tools/h5dump/testh5dumpvds.sh
                 tools/h5dump/testh5dumpxml.sh
                 tools/h5ls/testh5ls.sh
                 tools/h5ls/testh5lsvds.sh
                 tools/h5import/Makefile
                 tools/h5import/h5importtestutil.sh
                 tools/h5diff/Makefile
                 tools/h5diff/testh5diff.sh
                 tools/h5diff/testph5diff.sh
                 tools/h5jam/Makefile
                 tools/h5jam/testh5jam.sh
                 tools/h5repack/Makefile
                 tools/h5repack/h5repack.sh
                 tools/h5repack/h5repack_plugin.sh
                 tools/h5ls/Makefile
                 tools/h5copy/Makefile
                 tools/h5copy/testh5copy.sh
                 tools/lib/Makefile
                 tools/misc/Makefile
                 tools/misc/h5cc
                 tools/misc/testh5mkgrp.sh
                 tools/misc/testh5repart.sh
                 tools/misc/vds/Makefile
                 tools/h5stat/testh5stat.sh
                 tools/h5stat/Makefile
                 tools/perform/Makefile
                 examples/Makefile
                 examples/run-c-ex.sh
                 examples/run_ff_tests.sh
                 examples/testh5cc.sh
                 c++/Makefile
                 c++/src/Makefile
                 c++/src/h5c++
                 c++/test/Makefile
                 c++/test/H5srcdir_str.h
                 c++/examples/Makefile
                 c++/examples/run-c++-ex.sh
                 c++/examples/testh5c++.sh
                 fortran/Makefile
                 fortran/src/h5fc
                 fortran/src/Makefile
                 fortran/src/H5fort_type_defines.h
                 fortran/test/Makefile
                 fortran/testpar/Makefile
                 fortran/examples/Makefile
                 fortran/examples/run-fortran-ex.sh
                 fortran/examples/testh5fc.sh
                 hl/Makefile
                 hl/src/Makefile
                 hl/test/Makefile
                 hl/test/H5srcdir_str.h
                 hl/tools/Makefile
                 hl/tools/gif2h5/Makefile
                 hl/tools/gif2h5/h52giftest.sh
                 hl/examples/Makefile
                 hl/examples/run-hlc-ex.sh
                 hl/c++/Makefile
                 hl/c++/src/Makefile
                 hl/c++/test/Makefile
                 hl/c++/examples/Makefile
                 hl/c++/examples/run-hlc++-ex.sh
                 hl/fortran/Makefile
                 hl/fortran/src/Makefile
                 hl/fortran/test/Makefile
                 hl/fortran/examples/Makefile
                 hl/fortran/examples/run-hlfortran-ex.sh])

AC_OUTPUT

chmod 755 tools/misc/h5cc

if test "X$HDF_FORTRAN" = "Xyes"; then
  chmod 755 fortran/src/h5fc
fi

if test "X$HDF_CXX" = "Xyes"; then
  chmod 755 c++/src/h5c++
fi

## HDF5 configure code created by autotools with gcc 4.9.2 is adding problematic
## linker flags:  -l with no library name; -l <libname>, specifically gfortran or m.
## This sed script corrects "-l <libname>" first and then "-l " with no library name.
## If the order is not preserved, all instances of "-l " will be removed.
sed -e '/^postdeps/ s/-l \([a-zA-Z]\)/-l\1/g' -e '/^postdeps/ s/-l //g' -i libtool

## show the configure settings
cat src/libhdf5.settings
